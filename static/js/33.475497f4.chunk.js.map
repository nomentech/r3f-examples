{"version":3,"file":"static/js/33.475497f4.chunk.js","mappings":"+LAGA,SAASA,IACP,IAAMC,GAAKC,EAAAA,EAAAA,IAAS,SAAAC,GAAK,OAAIA,EAAMF,MAQnC,OAPAG,EAAAA,EAAAA,YAAU,WAGR,OAFAH,EAAGI,UAAUC,YAAa,EAC1BL,EAAGI,UAAUE,aAAc,EACpB,WACLN,EAAGI,UAAUC,WAAaL,EAAGI,UAAUE,aAAc,KAEtD,CAACN,EAAGI,YACA,K,uICyBTG,EAAAA,EAAAA,QAAgBC,GAEhB,MAhCa,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAUC,GAAgB,YACxC,GAA6BH,EAAAA,EAAAA,GAAQC,GAA7BG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAIf,OACE,qCAAWF,GAAX,IAAkBG,QAAS,KAA3B,WAEE,iBAAMC,YAAU,EAACC,eAAa,EAACC,SAAUL,EAAMM,KAAKD,SAAUE,SAAUN,EAAUO,MAAO,2BAA0B,MAEnH,iBAAML,YAAU,EAACC,eAAa,EAACC,SAAUL,EAAMS,OAAOJ,SAAtD,UACE,iCACEP,MAAOA,EACPY,MAAOT,EAAUU,KAAKD,MACtBE,UAAWX,EAAUU,KAAKC,UAC1B,qBAAoBC,EAAAA,eACpBC,aAAcb,EAAUU,KAAKG,aAC7BC,aAAcd,EAAUU,KAAKI,aAC7BC,gBAAiB,QAGrB,iBAAMb,YAAU,EAACC,eAAa,EAACC,SAAUL,EAAMiB,OAAOZ,SAAUE,SAAUN,EAAUiB,KAAM,2BAA0B,MACpH,iBAAMf,YAAU,EAACC,eAAa,EAACC,SAAUL,EAAMmB,OAAOd,SAAUE,SAAUN,EAAUmB,MAAO,2BAA0B,MACrH,iBAAMjB,YAAU,EAACC,eAAa,EAACC,SAAUL,EAAMqB,OAAOhB,SAAUE,SAAUN,EAAUqB,KAAM,2BAA0B,MACpH,iBAAMnB,YAAU,EAACC,eAAa,EAACC,SAAUL,EAAMuB,OAAOlB,SAAUE,SAAUN,EAAUuB,QAAS,2BAA0B,MACvH,iBAAMrB,YAAU,EAACC,eAAa,EAACC,SAAUL,EAAMyB,OAAOpB,SAAUE,SAAUN,EAAUyB,KAAM,2BAA0B,MACpH,iBAAMvB,YAAU,EAACC,eAAa,EAACC,SAAUL,EAAM2B,OAAOtB,SAAUE,SAAUN,EAAU2B,MAAO,2BAA0B,UCT3H,EAlBgB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SACjB,OACE,gCACIA,GACF,UAAC,KAAD,CAAQC,SAAO,EAACC,IAAK,CAAC,EAAG,GAAIC,OAAQ,CAAEC,SAAU,CAAC,EAAG,EAAG,KAAMC,IAAK,IAAnE,WACE,UAAC,EAAAC,SAAD,CAAUC,SAAU,KAApB,WACE,UAACC,EAAA,EAAD,CAAOC,YAAY,OAAOC,UAAW,GAArC,WACE,SAAC,EAAD,CAAMzC,MAAM,SAASmC,SAAU,CAAC,EAAG,EAAG,MACtC,SAAC,EAAD,CAAMnC,MAAM,SAAS0C,OAAQ,EAAGC,SAAU,CAAC,EAAG,GAAKC,KAAKC,IAAKV,SAAU,CAAC,EAAG,GAAI,SAEjF,SAAC7C,EAAD,QAEF,SAACwD,EAAA,EAAD,CAAeC,YAAU","sources":["../node_modules/@react-three/drei/core/BakeShadows.js","basic-examples/re-using-gltfs/Shoe.tsx","basic-examples/re-using-gltfs/Example.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction BakeShadows() {\n  const gl = useThree(state => state.gl);\n  useEffect(() => {\n    gl.shadowMap.autoUpdate = false;\n    gl.shadowMap.needsUpdate = true;\n    return () => {\n      gl.shadowMap.autoUpdate = gl.shadowMap.needsUpdate = true;\n    };\n  }, [gl.shadowMap]);\n  return null;\n}\n\nexport { BakeShadows };\n","/* This file was initially auto-generated by https://github.com/pmndrs/gltfjsx and then adapted manually */\n\nimport * as THREE from 'three'\nimport { useGLTF } from '@react-three/drei'\n\nimport model from '../../models/shoe.gltf'\n\nconst Shoe = ({ color, ...props}: any) => {\n  const { nodes, materials } = useGLTF(model) as any\n  // The following is a read-out of the models contents, all of its\n  // meshes, groups and so on.\n\n  return (\n    <group {...props} dispose={null}>\n      {/* We can alter materials by piercing into them: materia-property={...} */}\n      <mesh castShadow receiveShadow geometry={nodes.shoe.geometry} material={materials.laces} material-envMapIntensity={0.8} />\n      {/* Or, we define new materials, which now allows full re-use */}\n      <mesh castShadow receiveShadow geometry={nodes.shoe_1.geometry}>\n        <meshStandardMaterial\n          color={color}\n          aoMap={materials.mesh.aoMap}\n          normalMap={materials.mesh.normalMap}\n          normalMap-encoding={THREE.LinearEncoding}\n          roughnessMap={materials.mesh.roughnessMap}\n          metalnessMap={materials.mesh.metalnessMap}\n          envMapIntensity={0.8}\n        />\n      </mesh>\n      <mesh castShadow receiveShadow geometry={nodes.shoe_2.geometry} material={materials.caps} material-envMapIntensity={0.8} />\n      <mesh castShadow receiveShadow geometry={nodes.shoe_3.geometry} material={materials.inner} material-envMapIntensity={0.8} />\n      <mesh castShadow receiveShadow geometry={nodes.shoe_4.geometry} material={materials.sole} material-envMapIntensity={0.8} />\n      <mesh castShadow receiveShadow geometry={nodes.shoe_5.geometry} material={materials.stripes} material-envMapIntensity={0.8} />\n      <mesh castShadow receiveShadow geometry={nodes.shoe_6.geometry} material={materials.band} material-envMapIntensity={0.8} />\n      <mesh castShadow receiveShadow geometry={nodes.shoe_7.geometry} material={materials.patch} material-envMapIntensity={0.8} />\n    </group>\n  )\n}\nuseGLTF.preload(model)\n\nexport default Shoe","import { Suspense } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport { BakeShadows, OrbitControls, Stage } from '@react-three/drei'\n\nimport Shoe from './Shoe'\n\nconst Example = ({ children }: any) => {\n  return (\n    <>\n      { children }\n      <Canvas shadows dpr={[1, 2]} camera={{ position: [0, 0, 150], fov: 40 }}>\n        <Suspense fallback={null}>\n          <Stage environment=\"city\" intensity={0.6}>\n            <Shoe color=\"tomato\" position={[0, 0, 0]}/>\n            <Shoe color=\"orange\" scale={-1} rotation={[0, 0.5, Math.PI]} position={[0, 0, -2]} />\n          </Stage>\n          <BakeShadows />\n        </Suspense>\n        <OrbitControls autoRotate/>\n      </Canvas>\n    </>\n  )\n}\n\nexport default Example"],"names":["BakeShadows","gl","useThree","state","useEffect","shadowMap","autoUpdate","needsUpdate","useGLTF","model","color","props","nodes","materials","dispose","castShadow","receiveShadow","geometry","shoe","material","laces","shoe_1","aoMap","mesh","normalMap","THREE","roughnessMap","metalnessMap","envMapIntensity","shoe_2","caps","shoe_3","inner","shoe_4","sole","shoe_5","stripes","shoe_6","band","shoe_7","patch","children","shadows","dpr","camera","position","fov","Suspense","fallback","Stage","environment","intensity","scale","rotation","Math","PI","OrbitControls","autoRotate"],"sourceRoot":""}