{"version":3,"file":"static/js/7946.0b2cd041.chunk.js","mappings":"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","sources":["basic-examples/re-using-gltfs/Shoe.tsx","basic-examples/re-using-gltfs/Example.tsx","../node_modules/@react-three/drei/core/BakeShadows.js","../node_modules/three-stdlib/shaders/HorizontalBlurShader.js","../node_modules/three-stdlib/shaders/VerticalBlurShader.js","../node_modules/@react-three/drei/core/ContactShadows.js","../node_modules/@react-three/drei/core/OrbitControls.js","../node_modules/@react-three/drei/core/Stage.js"],"sourcesContent":["/* This file was initially auto-generated by https://github.com/pmndrs/gltfjsx and then adapted manually */\n\nimport * as THREE from 'three'\nimport { useGLTF } from '@react-three/drei'\n\nimport model from '../../models/shoe.gltf'\n\nconst Shoe = ({ color, ...props}: any) => {\n  const { nodes, materials } = useGLTF(model) as any\n  // The following is a read-out of the models contents, all of its\n  // meshes, groups and so on.\n\n  return (\n    <group {...props} dispose={null}>\n      {/* We can alter materials by piercing into them: materia-property={...} */}\n      <mesh castShadow receiveShadow geometry={nodes.shoe.geometry} material={materials.laces} material-envMapIntensity={0.8} />\n      {/* Or, we define new materials, which now allows full re-use */}\n      <mesh castShadow receiveShadow geometry={nodes.shoe_1.geometry}>\n        <meshStandardMaterial\n          color={color}\n          aoMap={materials.mesh.aoMap}\n          normalMap={materials.mesh.normalMap}\n          normalMap-encoding={THREE.LinearEncoding}\n          roughnessMap={materials.mesh.roughnessMap}\n          metalnessMap={materials.mesh.metalnessMap}\n          envMapIntensity={0.8}\n        />\n      </mesh>\n      <mesh castShadow receiveShadow geometry={nodes.shoe_2.geometry} material={materials.caps} material-envMapIntensity={0.8} />\n      <mesh castShadow receiveShadow geometry={nodes.shoe_3.geometry} material={materials.inner} material-envMapIntensity={0.8} />\n      <mesh castShadow receiveShadow geometry={nodes.shoe_4.geometry} material={materials.sole} material-envMapIntensity={0.8} />\n      <mesh castShadow receiveShadow geometry={nodes.shoe_5.geometry} material={materials.stripes} material-envMapIntensity={0.8} />\n      <mesh castShadow receiveShadow geometry={nodes.shoe_6.geometry} material={materials.band} material-envMapIntensity={0.8} />\n      <mesh castShadow receiveShadow geometry={nodes.shoe_7.geometry} material={materials.patch} material-envMapIntensity={0.8} />\n    </group>\n  )\n}\nuseGLTF.preload(model)\n\nexport default Shoe","import { Suspense } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport { BakeShadows, OrbitControls, Stage } from '@react-three/drei'\n\nimport Shoe from './Shoe'\n\nconst Example = ({ children }: any) => {\n  return (\n    <>\n      { children }\n      <Canvas shadows dpr={[1, 2]} camera={{ position: [0, 0, 150], fov: 40 }}>\n        <Suspense fallback={null}>\n          <Stage environment=\"city\" intensity={0.6}>\n            <Shoe color=\"tomato\" position={[0, 0, 0]}/>\n            <Shoe color=\"orange\" scale={-1} rotation={[0, 0.5, Math.PI]} position={[0, 0, -2]} />\n          </Stage>\n          <BakeShadows />\n        </Suspense>\n        <OrbitControls autoRotate/>\n      </Canvas>\n    </>\n  )\n}\n\nexport default Example","import { useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction BakeShadows() {\n  const gl = useThree(state => state.gl);\n  useEffect(() => {\n    gl.shadowMap.autoUpdate = false;\n    gl.shadowMap.needsUpdate = true;\n    return () => {\n      gl.shadowMap.autoUpdate = gl.shadowMap.needsUpdate = true;\n    };\n  }, [gl.shadowMap]);\n  return null;\n}\n\nexport { BakeShadows };\n","/**\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n */\nconst HorizontalBlurShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    h: {\n      value: 1.0 / 512.0\n    }\n  },\n  vertexShader:\n  /* glsl */\n  `\n      varying vec2 vUv;\n\n      void main() {\n\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n      }\n  `,\n  fragmentShader:\n  /* glsl */\n  `\n    uniform sampler2D tDiffuse;\n    uniform float h;\n\n    varying vec2 vUv;\n\n    void main() {\n\n    \tvec4 sum = vec4( 0.0 );\n\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\n\n    \tgl_FragColor = sum;\n\n    }\n  `\n};\n\nexport { HorizontalBlurShader };\n","/**\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n */\nconst VerticalBlurShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    v: {\n      value: 1.0 / 512.0\n    }\n  },\n  vertexShader:\n  /* glsl */\n  `\n    varying vec2 vUv;\n\n    void main() {\n\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n    }\n  `,\n  fragmentShader:\n  /* glsl */\n  `\n\n  uniform sampler2D tDiffuse;\n  uniform float v;\n\n  varying vec2 vUv;\n\n  void main() {\n\n    vec4 sum = vec4( 0.0 );\n\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\n\n    gl_FragColor = sum;\n\n  }\n  `\n};\n\nexport { VerticalBlurShader };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\n\nconst ContactShadows = /*#__PURE__*/React.forwardRef(({\n  scale = 10,\n  frames = Infinity,\n  opacity = 1,\n  width = 1,\n  height = 1,\n  blur = 1,\n  far = 10,\n  resolution = 512,\n  smooth = true,\n  color = '#000000',\n  depthWrite = false,\n  renderOrder,\n  ...props\n}, ref) => {\n  const scene = useThree(state => state.scene);\n  const gl = useThree(state => state.gl);\n  const shadowCamera = React.useRef(null);\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n  const [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur] = React.useMemo(() => {\n    const renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n    const renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n    const planeGeometry = new THREE.PlaneBufferGeometry(width, height).rotateX(Math.PI / 2);\n    const blurPlane = new THREE.Mesh(planeGeometry);\n    const depthMaterial = new THREE.MeshDepthMaterial();\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\n\n    depthMaterial.onBeforeCompile = shader => {\n      shader.uniforms = { ...shader.uniforms,\n        ucolor: {\n          value: new THREE.Color(color).convertSRGBToLinear()\n        }\n      };\n      shader.fragmentShader = shader.fragmentShader.replace(`void main() {`, //\n      `uniform vec3 ucolor;\n           void main() {\n          `);\n      shader.fragmentShader = shader.fragmentShader.replace('vec4( vec3( 1.0 - fragCoordZ ), opacity );', 'vec4( ucolor, ( 1.0 - fragCoordZ ) * 1.0 );');\n    };\n\n    const horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n    const verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n  }, [resolution, width, height, scale, color]);\n\n  const blurShadows = blur => {\n    blurPlane.visible = true;\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTargetBlur);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTarget);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.visible = false;\n  };\n\n  let count = 0;\n  useFrame(() => {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      const initialBackground = scene.background;\n      scene.background = null;\n      const initialOverrideMaterial = scene.overrideMaterial;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      scene.overrideMaterial = initialOverrideMaterial;\n      blurShadows(blur);\n      if (smooth) blurShadows(blur * 0.4);\n      gl.setRenderTarget(null);\n      scene.background = initialBackground;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: renderOrder,\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    map: renderTarget.texture,\n    \"map-encoding\": gl.outputEncoding,\n    transparent: true,\n    opacity: opacity,\n    depthWrite: depthWrite\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\n\nexport { ContactShadows };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Environment } from './Environment.js';\nimport { ContactShadows } from './ContactShadows.js';\n\nconst presets = {\n  rembrandt: {\n    main: [1, 2, 1],\n    fill: [-2, -0.5, -2]\n  },\n  portrait: {\n    main: [-1, 2, 0.5],\n    fill: [-1, 0.5, -1.5]\n  },\n  upfront: {\n    main: [0, 2, 1],\n    fill: [-1, 0.5, -1.5]\n  },\n  soft: {\n    main: [-2, 4, 4],\n    fill: [-1, 0.5, -1.5]\n  }\n};\nfunction Stage({\n  children,\n  controls,\n  shadows = true,\n  adjustCamera = true,\n  environment = 'city',\n  intensity = 1,\n  preset = 'rembrandt',\n  shadowBias = 0,\n  contactShadow = {\n    blur: 2,\n    opacity: 0.5,\n    position: [0, 0, 0]\n  },\n  ...props\n}) {\n  const config = presets[preset];\n  const camera = useThree(state => state.camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(state => state.controls);\n  const outer = React.useRef(null);\n  const inner = React.useRef(null);\n  const [{\n    radius,\n    width,\n    height\n  }, set] = React.useState({\n    radius: 0,\n    width: 0,\n    height: 0\n  });\n  React.useLayoutEffect(() => {\n    outer.current.position.set(0, 0, 0);\n    outer.current.updateWorldMatrix(true, true);\n    const box3 = new THREE.Box3().setFromObject(inner.current);\n    const center = new THREE.Vector3();\n    const sphere = new THREE.Sphere();\n    const height = box3.max.y - box3.min.y;\n    const width = box3.max.x - box3.min.x;\n    box3.getCenter(center);\n    box3.getBoundingSphere(sphere);\n    set({\n      radius: sphere.radius,\n      width,\n      height\n    });\n    outer.current.position.set(-center.x, -center.y + height / 2, -center.z);\n  }, [children]);\n  React.useLayoutEffect(() => {\n    if (adjustCamera) {\n      const y = radius / (height > width ? 1.5 : 2.5);\n      camera.position.set(0, radius * 0.5, radius * 2.5);\n      camera.near = 0.1;\n      camera.far = Math.max(5000, radius * 4);\n      camera.lookAt(0, y, 0);\n      const ctrl = defaultControls || (controls == null ? void 0 : controls.current);\n\n      if (ctrl) {\n        ctrl.target.set(0, y, 0);\n        ctrl.update();\n      }\n    }\n  }, [defaultControls, radius, height, width, adjustCamera]);\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    ref: outer\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: inner\n  }, children)), contactShadow && /*#__PURE__*/React.createElement(ContactShadows, _extends({\n    scale: radius * 2,\n    far: radius / 2\n  }, contactShadow)), environment && /*#__PURE__*/React.createElement(Environment, {\n    preset: environment\n  }), /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: intensity / 3\n  }), /*#__PURE__*/React.createElement(\"spotLight\", {\n    penumbra: 1,\n    position: [config.main[0] * radius, config.main[1] * radius, config.main[2] * radius],\n    intensity: intensity * 2,\n    castShadow: shadows,\n    \"shadow-bias\": shadowBias\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [config.fill[0] * radius, config.fill[1] * radius, config.fill[2] * radius],\n    intensity: intensity\n  }));\n}\n\nexport { Stage };\n"],"names":["useGLTF","model","color","props","nodes","materials","dispose","castShadow","receiveShadow","geometry","shoe","material","laces","shoe_1","aoMap","mesh","normalMap","THREE","roughnessMap","metalnessMap","envMapIntensity","shoe_2","caps","shoe_3","inner","shoe_4","sole","shoe_5","stripes","shoe_6","band","shoe_7","patch","children","shadows","dpr","camera","position","fov","Suspense","fallback","Stage","environment","intensity","scale","rotation","Math","PI","BakeShadows","OrbitControls","autoRotate","gl","useThree","state","useEffect","shadowMap","autoUpdate","needsUpdate","HorizontalBlurShader","uniforms","tDiffuse","value","h","vertexShader","fragmentShader","VerticalBlurShader","v","ContactShadows","React","ref","frames","Infinity","opacity","width","height","blur","far","resolution","smooth","depthWrite","renderOrder","scene","shadowCamera","Array","isArray","renderTarget","renderTargetBlur","texture","generateMipmaps","planeGeometry","rotateX","blurPlane","depthMaterial","depthTest","onBeforeCompile","shader","ucolor","convertSRGBToLinear","replace","horizontalBlurMaterial","verticalBlurMaterial","blurShadows","visible","setRenderTarget","render","current","count","useFrame","initialBackground","background","initialOverrideMaterial","overrideMaterial","_extends","map","outputEncoding","transparent","args","makeDefault","regress","domElement","enableDamping","onChange","onStart","onEnd","restProps","invalidate","defaultCamera","events","set","get","performance","explCamera","explDomElement","connected","controls","OrbitControls$1","enabled","update","connect","callback","e","addEventListener","removeEventListener","old","object","presets","rembrandt","main","fill","portrait","upfront","soft","adjustCamera","preset","shadowBias","contactShadow","config","defaultControls","outer","radius","updateWorldMatrix","box3","setFromObject","center","sphere","max","y","min","x","getCenter","getBoundingSphere","z","near","lookAt","ctrl","target","Environment","penumbra"],"sourceRoot":""}