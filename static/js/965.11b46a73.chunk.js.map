{"version":3,"file":"static/js/965.11b46a73.chunk.js","mappings":"mWAgCMA,EAAQ,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,IAAQC,GAAiB,YAEhCC,GAAUC,EAAAA,EAAAA,GAAQH,GAAlBE,MAER,OAAO,8BAAWE,OAAQF,GAAWD,KAEjCI,EAAS,SAACJ,GACd,IAAMK,GAAWC,EAAAA,EAAAA,UAEjB,OADAC,EAAAA,EAAAA,IAAS,SAACC,GAAD,OAAWH,EAAII,QAAQC,SAASC,EAAIH,EAAMI,MAAMC,gBAClD,0BAAOR,IAAKA,GAASL,KAG9B,EAjCgB,SAAC,GAAuB,IAArBc,EAAoB,EAApBA,SACjB,OACE,gCACIA,GACF,SAAC,EAAAC,SAAD,CAAUC,UAAU,yCAApB,UACE,UAAC,KAAD,CAAQC,IAAK,CAAC,EAAG,GAAIC,OAAQ,CAACC,SAAU,EAAE,EAAG,EAAG,GAAIC,IAAI,IAAxD,WACE,6BAAkBD,SAAU,CAAC,GAAI,GAAI,GAAIE,UAAW,OACpD,6BAAkBF,SAAU,EAAE,GAAI,GAAI,GAAIE,UAAW,KACrD,6BAAkBF,SAAU,EAAE,GAAI,GAAI,GAAIE,UAAW,OACrD,6BAAkBF,SAAU,CAAC,GAAI,GAAI,GAAIE,UAAW,OACpD,SAACjB,EAAD,CAAQ,cAAa,GAAKkB,MAAO,GAAjC,UACE,SAAC,EAAAP,SAAD,CAAUC,UAAU,SAAClB,EAAD,CAAOC,IAAKwB,IAAhC,UACE,SAACzB,EAAD,CAAOC,IAAKyB","sources":["basic-examples/progressive-loading-states-with-suspense/Example.tsx"],"sourcesContent":["import { Suspense, useRef } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { useGLTF } from '@react-three/drei'\n\nimport modelHigh from '../../models/bust-hi.glb'\nimport modelLow from '../../models/bust-lo-draco.glb'\n\n// This example shows how to prgressively load an asset through nested suspense blocks\n// 1. A generic fallback\n// 2. Lesser resolution\n// 3. High resolution\nconst Example = ({ children }: any) => {\n  return (\n    <>\n      { children }\n      <Suspense fallback={<span>loading...</span>}>\n        <Canvas dpr={[1, 2]} camera={{position: [-2, 2, 4], fov:25}}>\n          <directionalLight position={[10, 10, 0]} intensity={1.5} />\n          <directionalLight position={[-10, 10, 5]} intensity={1} />\n          <directionalLight position={[-10, 20, 0]} intensity={1.5} />\n          <directionalLight position={[0, -10, 0]} intensity={0.25} />\n          <Rotate position-y={-0.5} scale={0.2}>\n            <Suspense fallback={<Model url={modelLow} />}>\n              <Model url={modelHigh} />\n            </Suspense>\n          </Rotate>\n        </Canvas>\n      </Suspense>\n    </>\n  )\n}\n\nconst Model = ({ url, ...props }: any) => {\n  // useGLTF suspends the component, it literally stops processing\n  const { scene } = useGLTF(url) as any\n  // By the time we're here the model is gueranteed to be available\n  return <primitive object={scene} {...props} />\n}\nconst Rotate = (props: any) => {\n  const ref: any = useRef()\n  useFrame((state) => ref.current.rotation.y = state.clock.elapsedTime)\n  return <group ref={ref} {...props} />\n}\n\nexport default Example"],"names":["Model","url","props","scene","useGLTF","object","Rotate","ref","useRef","useFrame","state","current","rotation","y","clock","elapsedTime","children","Suspense","fallback","dpr","camera","position","fov","intensity","scale","modelLow","modelHigh"],"sourceRoot":""}