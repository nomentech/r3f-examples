{"version":3,"file":"static/js/925.7f4c685f.chunk.js","mappings":"iMAKMA,EAAa,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SACrC,GAAqBC,EAAAA,EAAAA,KAAO,iBAAO,CAChCC,WAAW,EACXC,KAAMJ,EACNC,SAAAA,EACAF,UAAAA,MAJIM,GAAP,eAOA,OACE,kBAAMA,IAAKA,EAAKJ,SAAUA,EAA1B,WACE,wBAAaG,KAAMJ,KACnB,iCAAsBM,WAAS,EAACC,MAAM,cAKtCC,EAAO,WACX,OAAqBC,EAAAA,EAAAA,KAAU,iBAAO,CACpCC,KAAM,EACNT,SAAU,CAAC,EAAG,GAAI,GAClBG,KAAM,CAAC,OAHFC,GAAP,eAMA,OACE,kBAAMM,YAAU,EAACC,eAAa,EAACP,IAAKA,EAApC,WACE,2BAAgBD,KAAM,CAAC,EAAG,GAAI,OAC9B,gCAAqBG,MAAM,cAK3BM,EAAQ,SAACC,GACb,OAAqBC,EAAAA,EAAAA,KAAS,0BAASC,KAAM,UAAaF,MAAnDT,GAAP,eAEA,OACE,kBAAMA,IAAKA,EAAKO,eAAa,EAA7B,WACE,0BAAeR,KAAM,CAAC,IAAK,QAC3B,2BAAgBG,MAAM,gBAiC5B,UA5BgB,SAAC,GAAuB,IAArBU,EAAoB,EAApBA,SACjB,GAAoBC,EAAAA,EAAAA,UAAS,WAA7B,eAAOC,EAAP,KAAWC,EAAX,KACA,OACE,gCACIH,GACF,UAAC,KAAD,CAAQI,SAAO,EAACC,IAAK,CAAC,EAAG,GAAIC,OAAQ,CAAEtB,SAAU,EAAE,GAAI,GAAI,GAAIuB,IAAK,IAApE,WACE,SAAC,IAAD,KACA,gBAAKC,OAAO,MAAMrB,KAAM,CAACe,EAAI,GAAI,OACjC,kBAAOM,OAAO,aAAarB,KAAM,CAACe,MAClC,yBAAcO,UAAW,MACzB,sBAAWzB,SAAU,CAAC,GAAI,GAAI,IAAK0B,MAAO,GAAKD,UAAW,EAAGf,YAAU,EAACiB,SAAU,KAClF,UAAC,KAAD,YACE,SAAC9B,EAAD,CACEC,UAAW,SAAC8B,GACVC,QAAQC,IAAI,gCAAiCF,GAC7CT,EAAM,YAERnB,SAAU,CAAC,EAAG,EAAG,GACjBD,KAAM,CAAC,EAAG,EAAG,MAEf,SAACQ,EAAD,KACA,SAACK,EAAD,CAAOmB,SAAU,EAAEC,KAAKC,GAAG,EAAG,EAAG","sources":["basic-examples/trigger-meshes/Example.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport { OrbitControls } from '@react-three/drei'\nimport { Physics, useBox, usePlane, useSphere } from '@react-three/cannon'\n\nconst BoxTrigger = ({ onCollide, size, position}: any) => {\n  const [ref]: any[] = useBox(() => ({\n     isTrigger: true,\n     args: size,\n     position,\n     onCollide\n  }))\n\n  return (\n    <mesh ref={ref} position={position}>\n      <boxGeometry args={size} />\n      <meshStandardMaterial wireframe color='green' />\n    </mesh>\n  )\n}\n\nconst Ball = () => {\n  const [ref]: any[] = useSphere(() => ({\n    mass: 1,\n    position: [0, 20, 0],\n    args: [1]\n  }))\n\n  return (\n    <mesh castShadow receiveShadow ref={ref}>\n      <sphereGeometry args={[1, 64, 64]} />\n      <meshLambertMaterial color='white' />\n    </mesh>\n  )\n}\n\nconst Plane = (props: any) => {\n  const [ref]: any[] = usePlane(() => ({ type: 'Static', ...props }))\n\n  return (\n    <mesh ref={ref} receiveShadow>\n      <planeGeometry args={[100, 100]} />\n      <shadowMaterial color='#171717' />\n    </mesh>\n  )\n} \n\nconst Example = ({ children }: any) => {\n  const [bg, setbg] = useState('#171720')\n  return (\n    <>\n      { children }\n      <Canvas shadows dpr={[1, 2]} camera={{ position: [-10, 15, 5], fov: 50 }} >\n        <OrbitControls />\n        <fog attach='fog' args={[bg, 10, 50]} />\n        <color attach='background' args={[bg]} />\n        <ambientLight intensity={0.1} />\n        <spotLight position={[10, 10, 10]} angle={0.5} intensity={1} castShadow penumbra={1} />\n        <Physics>\n          <BoxTrigger\n            onCollide={(e: any) => {\n              console.log('Collision event on BoxTrigger', e)\n              setbg('#fe4365')\n            }}\n            position={[0, 5, 0]}\n            size={[4, 1, 4]}\n          />\n          <Ball />\n          <Plane rotation={[-Math.PI/2, 0, 0]} />\n        </Physics>\n      </Canvas>\n    </>\n  )\n}\n\nexport default Example"],"names":["BoxTrigger","onCollide","size","position","useBox","isTrigger","args","ref","wireframe","color","Ball","useSphere","mass","castShadow","receiveShadow","Plane","props","usePlane","type","children","useState","bg","setbg","shadows","dpr","camera","fov","attach","intensity","angle","penumbra","e","console","log","rotation","Math","PI"],"sourceRoot":""}