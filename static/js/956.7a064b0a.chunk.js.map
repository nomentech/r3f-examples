{"version":3,"file":"static/js/956.7a064b0a.chunk.js","mappings":"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","sources":["../node_modules/@react-three/drei/web/Html.js","basic-examples/mixing-html-and-webgl/Example.tsx"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport { Vector3, OrthographicCamera, PerspectiveCamera } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst v1 = new Vector3();\nconst v2 = new Vector3();\nconst v3 = new Vector3();\n\nfunction defaultCalculatePosition(el, camera, size) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\n}\n\nfunction isObjectBehindCamera(el, camera) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n  const deltaCamObj = objectPos.sub(cameraPos);\n  const camDir = camera.getWorldDirection(v3);\n  return deltaCamObj.angleTo(camDir) > Math.PI / 2;\n}\n\nfunction isObjectVisible(el, camera, raycaster, occlude) {\n  const elPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const screenPos = elPos.clone();\n  screenPos.project(camera);\n  raycaster.setFromCamera(screenPos, camera);\n  const intersects = raycaster.intersectObjects(occlude, true);\n\n  if (intersects.length) {\n    const intersectionDistance = intersects[0].distance;\n    const pointDistance = elPos.distanceTo(raycaster.ray.origin);\n    return pointDistance < intersectionDistance;\n  }\n\n  return true;\n}\n\nfunction objectScale(el, camera) {\n  if (camera instanceof OrthographicCamera) {\n    return camera.zoom;\n  } else if (camera instanceof PerspectiveCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const vFOV = camera.fov * Math.PI / 180;\n    const dist = objectPos.distanceTo(cameraPos);\n    const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;\n    return 1 / scaleFOV;\n  } else {\n    return 1;\n  }\n}\n\nfunction objectZIndex(el, camera, zIndexRange) {\n  if (camera instanceof PerspectiveCamera || camera instanceof OrthographicCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const dist = objectPos.distanceTo(cameraPos);\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\n    const B = zIndexRange[1] - A * camera.far;\n    return Math.round(A * dist + B);\n  }\n\n  return undefined;\n}\n\nconst epsilon = value => Math.abs(value) < 1e-10 ? 0 : value;\n\nfunction getCSSMatrix(matrix, multipliers, prepend = '') {\n  let matrix3d = 'matrix3d(';\n\n  for (let i = 0; i !== 16; i++) {\n    matrix3d += epsilon(multipliers[i] * matrix.elements[i]) + (i !== 15 ? ',' : ')');\n  }\n\n  return prepend + matrix3d;\n}\n\nconst getCameraCSSMatrix = (multipliers => {\n  return matrix => getCSSMatrix(matrix, multipliers);\n})([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);\n\nconst getObjectCSSMatrix = (scaleMultipliers => {\n  return (matrix, factor) => getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)');\n})(f => [1 / f, 1 / f, 1 / f, 1, -1 / f, -1 / f, -1 / f, -1, 1 / f, 1 / f, 1 / f, 1, 1, 1, 1, 1]);\n\nconst Html = /*#__PURE__*/React.forwardRef(({\n  children,\n  eps = 0.001,\n  style,\n  className,\n  prepend,\n  center,\n  fullscreen,\n  portal,\n  distanceFactor,\n  sprite = false,\n  transform = false,\n  occlude,\n  onOcclude,\n  zIndexRange = [16777271, 0],\n  calculatePosition = defaultCalculatePosition,\n  as = 'div',\n  wrapperClass,\n  pointerEvents = 'auto',\n  ...props\n}, ref) => {\n  var _portal$current;\n\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const size = useThree(({\n    size\n  }) => size);\n  const raycaster = useThree(({\n    raycaster\n  }) => raycaster);\n  const [el] = React.useState(() => document.createElement(as));\n  const root = React.useMemo(() => ReactDOM.createRoot(el), [el]);\n  const group = React.useRef(null);\n  const oldZoom = React.useRef(0);\n  const oldPosition = React.useRef([0, 0]);\n  const transformOuterRef = React.useRef(null);\n  const transformInnerRef = React.useRef(null);\n  const target = (_portal$current = portal == null ? void 0 : portal.current) !== null && _portal$current !== void 0 ? _portal$current : gl.domElement.parentNode;\n  React.useEffect(() => {\n    if (group.current) {\n      scene.updateMatrixWorld();\n\n      if (transform) {\n        el.style.cssText = `position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;`;\n      } else {\n        const vec = calculatePosition(group.current, camera, size);\n        el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`;\n      }\n\n      if (target) {\n        if (prepend) target.prepend(el);else target.appendChild(el);\n      }\n\n      return () => {\n        if (target) target.removeChild(el);\n        root.unmount();\n      };\n    }\n  }, [target, transform]);\n  React.useLayoutEffect(() => {\n    if (wrapperClass) el.className = wrapperClass;\n  }, [wrapperClass]);\n  const styles = React.useMemo(() => {\n    if (transform) {\n      return {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: size.width,\n        height: size.height,\n        transformStyle: 'preserve-3d',\n        pointerEvents: 'none'\n      };\n    } else {\n      return {\n        position: 'absolute',\n        transform: center ? 'translate3d(-50%,-50%,0)' : 'none',\n        ...(fullscreen && {\n          top: -size.height / 2,\n          left: -size.width / 2,\n          width: size.width,\n          height: size.height\n        }),\n        ...style\n      };\n    }\n  }, [style, center, fullscreen, size, transform]);\n  const transformInnerStyles = React.useMemo(() => ({\n    position: 'absolute',\n    pointerEvents\n  }), [pointerEvents]);\n  React.useLayoutEffect(() => {\n    if (transform) {\n      root.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformOuterRef,\n        style: styles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformInnerRef,\n        style: transformInnerStyles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        className: className,\n        style: style,\n        children: children\n      }))));\n    } else {\n      root.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        style: styles,\n        className: className,\n        children: children\n      }));\n    }\n  });\n  const visible = React.useRef(true);\n  useFrame(() => {\n    if (group.current) {\n      camera.updateMatrixWorld();\n      group.current.updateWorldMatrix(true, false);\n      const vec = transform ? oldPosition.current : calculatePosition(group.current, camera, size);\n\n      if (transform || Math.abs(oldZoom.current - camera.zoom) > eps || Math.abs(oldPosition.current[0] - vec[0]) > eps || Math.abs(oldPosition.current[1] - vec[1]) > eps) {\n        const isBehindCamera = isObjectBehindCamera(group.current, camera);\n        let raytraceTarget = false;\n\n        if (typeof occlude === 'boolean') {\n          if (occlude === true) {\n            raytraceTarget = [scene];\n          }\n        } else if (Array.isArray(occlude)) {\n          raytraceTarget = occlude.map(item => item.current);\n        }\n\n        const previouslyVisible = visible.current;\n\n        if (raytraceTarget) {\n          const isvisible = isObjectVisible(group.current, camera, raycaster, raytraceTarget);\n          visible.current = isvisible && !isBehindCamera;\n        } else {\n          visible.current = !isBehindCamera;\n        }\n\n        if (previouslyVisible !== visible.current) {\n          if (onOcclude) onOcclude(!visible.current);else el.style.display = visible.current ? 'block' : 'none';\n        }\n\n        el.style.zIndex = `${objectZIndex(group.current, camera, zIndexRange)}`;\n\n        if (transform) {\n          const [widthHalf, heightHalf] = [size.width / 2, size.height / 2];\n          const fov = camera.projectionMatrix.elements[5] * heightHalf;\n          const {\n            isOrthographicCamera,\n            top,\n            left,\n            bottom,\n            right\n          } = camera;\n          const cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);\n          const cameraTransform = isOrthographicCamera ? `scale(${fov})translate(${epsilon(-(right + left) / 2)}px,${epsilon((top + bottom) / 2)}px)` : `translateZ(${fov}px)`;\n          let matrix = group.current.matrixWorld;\n\n          if (sprite) {\n            matrix = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix).scale(group.current.scale);\n            matrix.elements[3] = matrix.elements[7] = matrix.elements[11] = 0;\n            matrix.elements[15] = 1;\n          }\n\n          el.style.width = size.width + 'px';\n          el.style.height = size.height + 'px';\n          el.style.perspective = isOrthographicCamera ? '' : `${fov}px`;\n\n          if (transformOuterRef.current && transformInnerRef.current) {\n            transformOuterRef.current.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`;\n            transformInnerRef.current.style.transform = getObjectCSSMatrix(matrix, 1 / ((distanceFactor || 10) / 400));\n          }\n        } else {\n          const scale = distanceFactor === undefined ? 1 : objectScale(group.current, camera) * distanceFactor;\n          el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale})`;\n        }\n\n        oldPosition.current = vec;\n        oldZoom.current = camera.zoom;\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n    ref: group\n  }));\n});\n\nexport { Html };\n","import { useRef, useState } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { Html, OrbitControls } from '@react-three/drei'\n\nconst Box = () => {\n  const [size, set] = useState(2)\n  const [hidden, setVisible] = useState(false)\n  return (\n    <mesh scale={size * 0.5}>\n      <boxGeometry />\n      <meshStandardMaterial />\n      <Html\n        style={{\n          transition: 'all 0.2s',\n          opacity: hidden ? 0 : 1,\n          transform: `scale(${hidden ? 0.5 : 1})`\n        }}\n        distanceFactor={1.5}\n        position={[0, 0, 0.51]}\n        transform\n        occlude\n        onOcclude={(v) => {setVisible(v); return null}}>\n        <span>Size: </span>\n        <input type='number' value={size} \n          onChange={e => set(e.target.valueAsNumber)} />\n      </Html>\n    </mesh>\n  )\n}\n\nconst Sphere = (props: any) => {\n  const ref: any = useRef()\n  useFrame(\n    (state) => \n      ref.current.position.x = Math.sin(state.clock.getElapsedTime())\n  )\n  return (\n    <mesh ref={ref} {...props}>\n      <sphereGeometry args={[0.3, 32, 32]} />\n      <meshStandardMaterial color={'orange'} />\n    </mesh>\n  )\n} \n\nconst Example = ({ children }: any) => {\n  return (\n    <>\n      { children }\n      <Canvas dpr={[1, 2]} camera={{ fov: 25 }}>\n        <ambientLight intensity={0.5} />\n        <pointLight position={[10, 10, 5]} />\n        <pointLight position={[-10, -10, -10]} />\n        <Box />\n        <Sphere position={[0, 0, 1]} />\n        <OrbitControls />\n      </Canvas>\n    </>\n  )\n}\n\nexport default Example"],"names":["v1","Vector3","v2","v3","defaultCalculatePosition","el","camera","size","objectPos","setFromMatrixPosition","matrixWorld","project","widthHalf","width","heightHalf","height","x","y","epsilon","value","Math","abs","getCSSMatrix","matrix","multipliers","prepend","matrix3d","i","elements","getCameraCSSMatrix","getObjectCSSMatrix","factor","f","Html","React","ref","_portal$current","children","eps","style","className","center","fullscreen","portal","distanceFactor","sprite","transform","occlude","onOcclude","zIndexRange","calculatePosition","as","wrapperClass","pointerEvents","props","gl","useThree","scene","raycaster","document","createElement","root","ReactDOM","group","oldZoom","oldPosition","transformOuterRef","transformInnerRef","target","current","domElement","parentNode","updateMatrixWorld","cssText","vec","appendChild","removeChild","unmount","styles","position","top","left","transformStyle","transformInnerStyles","render","visible","useFrame","updateWorldMatrix","zoom","isBehindCamera","cameraPos","deltaCamObj","sub","camDir","getWorldDirection","angleTo","PI","isObjectBehindCamera","raytraceTarget","Array","isArray","map","item","previouslyVisible","isvisible","elPos","screenPos","clone","setFromCamera","intersects","intersectObjects","length","intersectionDistance","distance","distanceTo","ray","origin","isObjectVisible","display","zIndex","PerspectiveCamera","OrthographicCamera","dist","A","far","near","B","round","objectZIndex","fov","projectionMatrix","isOrthographicCamera","bottom","right","cameraMatrix","matrixWorldInverse","cameraTransform","transpose","copyPosition","scale","perspective","undefined","vFOV","tan","objectScale","_extends","Box","useState","set","hidden","setVisible","transition","opacity","v","type","onChange","e","valueAsNumber","Sphere","useRef","state","sin","clock","getElapsedTime","args","color","dpr","intensity","OrbitControls"],"sourceRoot":""}