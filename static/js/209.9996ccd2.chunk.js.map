{"version":3,"file":"static/js/209.9996ccd2.chunk.js","mappings":"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","sources":["../node_modules/@react-three/drei/core/Preload.js","basic-examples/sky-dome-with-annotations/Example.tsx","../node_modules/@react-three/drei/core/OrbitControls.js","../node_modules/@react-three/drei/web/Html.js"],"sourcesContent":["import { WebGLCubeRenderTarget, CubeCamera } from 'three';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction Preload({\n  all,\n  scene,\n  camera\n}) {\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const dCamera = useThree(({\n    camera\n  }) => camera);\n  const dScene = useThree(({\n    scene\n  }) => scene); // Layout effect because it must run before React commits\n\n  React.useLayoutEffect(() => {\n    const invisible = [];\n\n    if (all) {\n      (scene || dScene).traverse(object => {\n        if (object.visible === false) {\n          invisible.push(object);\n          object.visible = true;\n        }\n      });\n    } // Now compile the scene\n\n\n    gl.compile(scene || dScene, camera || dCamera); // And for good measure, hit it with a cube camera\n\n    const cubeRenderTarget = new WebGLCubeRenderTarget(128);\n    const cubeCamera = new CubeCamera(0.01, 100000, cubeRenderTarget);\n    cubeCamera.update(gl, scene || dScene);\n    cubeRenderTarget.dispose(); // Flips these objects back\n\n    invisible.forEach(object => object.visible = false);\n  }, []);\n  return null;\n}\n\nexport { Preload };\n","import { Suspense, useState } from 'react'\nimport * as THREE from 'three'\nimport { Canvas, useLoader } from '@react-three/fiber'\nimport { Html, OrbitControls, Preload } from '@react-three/drei'\n\nimport outside from '../../textures/2294472375_24a3b8ef46_o.jpg'\nimport inside from '../../textures/Photosphere1.jpg'\n\nconst store = [\n  { name: 'outside', color: 'lightpink', position: [10, 0, -15], url: outside, link: 1 },\n  { name: 'inside', color: 'lightblue', position: [15, 0, 0], url: inside, link: 0 }\n  // ...\n]\n\nconst Dome = ({ name, position, texture, onClick }: any) => {\n  return (\n    <group>\n      <mesh>\n        <sphereBufferGeometry args={[500, 60, 40]} />\n        <meshBasicMaterial map={texture} side={THREE.BackSide} />\n      </mesh>\n      <mesh position={position}>\n        <sphereGeometry args={[1.25, 32, 32]} />\n        <meshBasicMaterial color='white' />\n        <Html center>\n          <div className='cursor-pointer text-blue-500 text-sm' onClick={onClick}>{name}</div>\n        </Html>\n      </mesh>\n    </group>\n  )\n}\n\nconst Portals = () => {\n  const [which, set] = useState(0)\n  const { link, ...props } = store[which]\n  const maps = useLoader(THREE.TextureLoader, store.map(entry => entry.url))\n\n  return (\n    <Dome onClick={() => set(link)} {...props} texture={maps[which]} />\n  )\n}\n\nconst Example = ( { children }: any) => {\n  return (\n    <>\n      { children }\n      <Canvas frameloop='demand' camera={{ position: [0, 0, 0.1] }}>\n        <OrbitControls \n          enableZoom={false}\n          enablePan={false}\n          enableDamping\n          dampingFactor={0.2}\n          autoRotate={false}\n          rotateSpeed={-0.5} />\n        <Suspense fallback={null}>\n          <Preload all />\n          <Portals />\n        </Suspense>\n      </Canvas>\n    </>\n  )\n}\n\nexport default Example","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport { Vector3, OrthographicCamera, PerspectiveCamera } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst v1 = new Vector3();\nconst v2 = new Vector3();\nconst v3 = new Vector3();\n\nfunction defaultCalculatePosition(el, camera, size) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\n}\n\nfunction isObjectBehindCamera(el, camera) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n  const deltaCamObj = objectPos.sub(cameraPos);\n  const camDir = camera.getWorldDirection(v3);\n  return deltaCamObj.angleTo(camDir) > Math.PI / 2;\n}\n\nfunction isObjectVisible(el, camera, raycaster, occlude) {\n  const elPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const screenPos = elPos.clone();\n  screenPos.project(camera);\n  raycaster.setFromCamera(screenPos, camera);\n  const intersects = raycaster.intersectObjects(occlude, true);\n\n  if (intersects.length) {\n    const intersectionDistance = intersects[0].distance;\n    const pointDistance = elPos.distanceTo(raycaster.ray.origin);\n    return pointDistance < intersectionDistance;\n  }\n\n  return true;\n}\n\nfunction objectScale(el, camera) {\n  if (camera instanceof OrthographicCamera) {\n    return camera.zoom;\n  } else if (camera instanceof PerspectiveCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const vFOV = camera.fov * Math.PI / 180;\n    const dist = objectPos.distanceTo(cameraPos);\n    const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;\n    return 1 / scaleFOV;\n  } else {\n    return 1;\n  }\n}\n\nfunction objectZIndex(el, camera, zIndexRange) {\n  if (camera instanceof PerspectiveCamera || camera instanceof OrthographicCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const dist = objectPos.distanceTo(cameraPos);\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\n    const B = zIndexRange[1] - A * camera.far;\n    return Math.round(A * dist + B);\n  }\n\n  return undefined;\n}\n\nconst epsilon = value => Math.abs(value) < 1e-10 ? 0 : value;\n\nfunction getCSSMatrix(matrix, multipliers, prepend = '') {\n  let matrix3d = 'matrix3d(';\n\n  for (let i = 0; i !== 16; i++) {\n    matrix3d += epsilon(multipliers[i] * matrix.elements[i]) + (i !== 15 ? ',' : ')');\n  }\n\n  return prepend + matrix3d;\n}\n\nconst getCameraCSSMatrix = (multipliers => {\n  return matrix => getCSSMatrix(matrix, multipliers);\n})([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);\n\nconst getObjectCSSMatrix = (scaleMultipliers => {\n  return (matrix, factor) => getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)');\n})(f => [1 / f, 1 / f, 1 / f, 1, -1 / f, -1 / f, -1 / f, -1, 1 / f, 1 / f, 1 / f, 1, 1, 1, 1, 1]);\n\nconst Html = /*#__PURE__*/React.forwardRef(({\n  children,\n  eps = 0.001,\n  style,\n  className,\n  prepend,\n  center,\n  fullscreen,\n  portal,\n  distanceFactor,\n  sprite = false,\n  transform = false,\n  occlude,\n  onOcclude,\n  zIndexRange = [16777271, 0],\n  calculatePosition = defaultCalculatePosition,\n  as = 'div',\n  wrapperClass,\n  pointerEvents = 'auto',\n  ...props\n}, ref) => {\n  var _portal$current;\n\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const size = useThree(({\n    size\n  }) => size);\n  const raycaster = useThree(({\n    raycaster\n  }) => raycaster);\n  const [el] = React.useState(() => document.createElement(as));\n  const root = React.useMemo(() => ReactDOM.createRoot(el), [el]);\n  const group = React.useRef(null);\n  const oldZoom = React.useRef(0);\n  const oldPosition = React.useRef([0, 0]);\n  const transformOuterRef = React.useRef(null);\n  const transformInnerRef = React.useRef(null);\n  const target = (_portal$current = portal == null ? void 0 : portal.current) !== null && _portal$current !== void 0 ? _portal$current : gl.domElement.parentNode;\n  React.useEffect(() => {\n    if (group.current) {\n      scene.updateMatrixWorld();\n\n      if (transform) {\n        el.style.cssText = `position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;`;\n      } else {\n        const vec = calculatePosition(group.current, camera, size);\n        el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`;\n      }\n\n      if (target) {\n        if (prepend) target.prepend(el);else target.appendChild(el);\n      }\n\n      return () => {\n        if (target) target.removeChild(el);\n        root.unmount();\n      };\n    }\n  }, [target, transform]);\n  React.useLayoutEffect(() => {\n    if (wrapperClass) el.className = wrapperClass;\n  }, [wrapperClass]);\n  const styles = React.useMemo(() => {\n    if (transform) {\n      return {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: size.width,\n        height: size.height,\n        transformStyle: 'preserve-3d',\n        pointerEvents: 'none'\n      };\n    } else {\n      return {\n        position: 'absolute',\n        transform: center ? 'translate3d(-50%,-50%,0)' : 'none',\n        ...(fullscreen && {\n          top: -size.height / 2,\n          left: -size.width / 2,\n          width: size.width,\n          height: size.height\n        }),\n        ...style\n      };\n    }\n  }, [style, center, fullscreen, size, transform]);\n  const transformInnerStyles = React.useMemo(() => ({\n    position: 'absolute',\n    pointerEvents\n  }), [pointerEvents]);\n  React.useLayoutEffect(() => {\n    if (transform) {\n      root.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformOuterRef,\n        style: styles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformInnerRef,\n        style: transformInnerStyles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        className: className,\n        style: style,\n        children: children\n      }))));\n    } else {\n      root.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        style: styles,\n        className: className,\n        children: children\n      }));\n    }\n  });\n  const visible = React.useRef(true);\n  useFrame(() => {\n    if (group.current) {\n      camera.updateMatrixWorld();\n      group.current.updateWorldMatrix(true, false);\n      const vec = transform ? oldPosition.current : calculatePosition(group.current, camera, size);\n\n      if (transform || Math.abs(oldZoom.current - camera.zoom) > eps || Math.abs(oldPosition.current[0] - vec[0]) > eps || Math.abs(oldPosition.current[1] - vec[1]) > eps) {\n        const isBehindCamera = isObjectBehindCamera(group.current, camera);\n        let raytraceTarget = false;\n\n        if (typeof occlude === 'boolean') {\n          if (occlude === true) {\n            raytraceTarget = [scene];\n          }\n        } else if (Array.isArray(occlude)) {\n          raytraceTarget = occlude.map(item => item.current);\n        }\n\n        const previouslyVisible = visible.current;\n\n        if (raytraceTarget) {\n          const isvisible = isObjectVisible(group.current, camera, raycaster, raytraceTarget);\n          visible.current = isvisible && !isBehindCamera;\n        } else {\n          visible.current = !isBehindCamera;\n        }\n\n        if (previouslyVisible !== visible.current) {\n          if (onOcclude) onOcclude(!visible.current);else el.style.display = visible.current ? 'block' : 'none';\n        }\n\n        el.style.zIndex = `${objectZIndex(group.current, camera, zIndexRange)}`;\n\n        if (transform) {\n          const [widthHalf, heightHalf] = [size.width / 2, size.height / 2];\n          const fov = camera.projectionMatrix.elements[5] * heightHalf;\n          const {\n            isOrthographicCamera,\n            top,\n            left,\n            bottom,\n            right\n          } = camera;\n          const cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);\n          const cameraTransform = isOrthographicCamera ? `scale(${fov})translate(${epsilon(-(right + left) / 2)}px,${epsilon((top + bottom) / 2)}px)` : `translateZ(${fov}px)`;\n          let matrix = group.current.matrixWorld;\n\n          if (sprite) {\n            matrix = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix).scale(group.current.scale);\n            matrix.elements[3] = matrix.elements[7] = matrix.elements[11] = 0;\n            matrix.elements[15] = 1;\n          }\n\n          el.style.width = size.width + 'px';\n          el.style.height = size.height + 'px';\n          el.style.perspective = isOrthographicCamera ? '' : `${fov}px`;\n\n          if (transformOuterRef.current && transformInnerRef.current) {\n            transformOuterRef.current.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`;\n            transformInnerRef.current.style.transform = getObjectCSSMatrix(matrix, 1 / ((distanceFactor || 10) / 400));\n          }\n        } else {\n          const scale = distanceFactor === undefined ? 1 : objectScale(group.current, camera) * distanceFactor;\n          el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale})`;\n        }\n\n        oldPosition.current = vec;\n        oldZoom.current = camera.zoom;\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n    ref: group\n  }));\n});\n\nexport { Html };\n"],"names":["Preload","all","scene","camera","gl","useThree","dCamera","dScene","React","invisible","traverse","object","visible","push","compile","cubeRenderTarget","WebGLCubeRenderTarget","CubeCamera","update","dispose","forEach","store","name","color","position","url","outside","link","inside","Dome","texture","onClick","args","map","side","THREE","Html","center","className","Portals","useState","which","set","props","maps","useLoader","entry","children","frameloop","OrbitControls","enableZoom","enablePan","enableDamping","dampingFactor","autoRotate","rotateSpeed","Suspense","fallback","ref","makeDefault","regress","domElement","onChange","onStart","onEnd","restProps","invalidate","state","defaultCamera","events","get","performance","explCamera","explDomElement","connected","controls","OrbitControls$1","useFrame","enabled","connect","callback","e","addEventListener","removeEventListener","old","_extends","v1","Vector3","v2","v3","defaultCalculatePosition","el","size","objectPos","setFromMatrixPosition","matrixWorld","project","widthHalf","width","heightHalf","height","x","y","epsilon","value","Math","abs","getCSSMatrix","matrix","multipliers","prepend","matrix3d","i","elements","getCameraCSSMatrix","getObjectCSSMatrix","factor","f","_portal$current","eps","style","fullscreen","portal","distanceFactor","sprite","transform","occlude","onOcclude","zIndexRange","calculatePosition","as","wrapperClass","pointerEvents","raycaster","document","createElement","root","ReactDOM","group","oldZoom","oldPosition","transformOuterRef","transformInnerRef","target","current","parentNode","updateMatrixWorld","cssText","vec","appendChild","removeChild","unmount","styles","top","left","transformStyle","transformInnerStyles","render","updateWorldMatrix","zoom","isBehindCamera","cameraPos","deltaCamObj","sub","camDir","getWorldDirection","angleTo","PI","isObjectBehindCamera","raytraceTarget","Array","isArray","item","previouslyVisible","isvisible","elPos","screenPos","clone","setFromCamera","intersects","intersectObjects","length","intersectionDistance","distance","distanceTo","ray","origin","isObjectVisible","display","zIndex","PerspectiveCamera","OrthographicCamera","dist","A","far","near","B","round","objectZIndex","fov","projectionMatrix","isOrthographicCamera","bottom","right","cameraMatrix","matrixWorldInverse","cameraTransform","transpose","copyPosition","scale","perspective","undefined","vFOV","tan","objectScale"],"sourceRoot":""}