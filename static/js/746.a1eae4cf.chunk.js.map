{"version":3,"file":"static/js/746.a1eae4cf.chunk.js","mappings":"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","sources":["basic-examples/mixing-html-and-webgl/Example.tsx","../node_modules/@react-three/drei/core/OrbitControls.js","../node_modules/@react-three/drei/web/Html.js"],"sourcesContent":["import { useRef, useState } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { Html, OrbitControls } from '@react-three/drei'\n\nconst Box = () => {\n  const [size, set] = useState(2)\n  const [hidden, setVisible] = useState(false)\n  return (\n    <mesh scale={size * 0.5}>\n      <boxGeometry />\n      <meshStandardMaterial />\n      <Html\n        style={{\n          transition: 'all 0.2s',\n          opacity: hidden ? 0 : 1,\n          transform: `scale(${hidden ? 0.5 : 1})`\n        }}\n        distanceFactor={1.5}\n        position={[0, 0, 0.51]}\n        transform\n        occlude\n        onOcclude={(v) => {setVisible(v); return null}}>\n        <span>Size: </span>\n        <input type='number' value={size} \n          onChange={e => set(e.target.valueAsNumber)} />\n      </Html>\n    </mesh>\n  )\n}\n\nconst Sphere = (props: any) => {\n  const ref: any = useRef()\n  useFrame(\n    (state) => \n      ref.current.position.x = Math.sin(state.clock.getElapsedTime())\n  )\n  return (\n    <mesh ref={ref} {...props}>\n      <sphereGeometry args={[0.3, 32, 32]} />\n      <meshStandardMaterial color={'orange'} />\n    </mesh>\n  )\n} \n\nconst Example = ({ children }: any) => {\n  return (\n    <>\n      { children }\n      <Canvas dpr={[1, 2]} camera={{ fov: 25 }}>\n        <ambientLight intensity={0.5} />\n        <pointLight position={[10, 10, 5]} />\n        <pointLight position={[-10, -10, -10]} />\n        <Box />\n        <Sphere position={[0, 0, 1]} />\n        <OrbitControls />\n      </Canvas>\n    </>\n  )\n}\n\nexport default Example","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport { Vector3, OrthographicCamera, PerspectiveCamera } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst v1 = new Vector3();\nconst v2 = new Vector3();\nconst v3 = new Vector3();\n\nfunction defaultCalculatePosition(el, camera, size) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\n}\n\nfunction isObjectBehindCamera(el, camera) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n  const deltaCamObj = objectPos.sub(cameraPos);\n  const camDir = camera.getWorldDirection(v3);\n  return deltaCamObj.angleTo(camDir) > Math.PI / 2;\n}\n\nfunction isObjectVisible(el, camera, raycaster, occlude) {\n  const elPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const screenPos = elPos.clone();\n  screenPos.project(camera);\n  raycaster.setFromCamera(screenPos, camera);\n  const intersects = raycaster.intersectObjects(occlude, true);\n\n  if (intersects.length) {\n    const intersectionDistance = intersects[0].distance;\n    const pointDistance = elPos.distanceTo(raycaster.ray.origin);\n    return pointDistance < intersectionDistance;\n  }\n\n  return true;\n}\n\nfunction objectScale(el, camera) {\n  if (camera instanceof OrthographicCamera) {\n    return camera.zoom;\n  } else if (camera instanceof PerspectiveCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const vFOV = camera.fov * Math.PI / 180;\n    const dist = objectPos.distanceTo(cameraPos);\n    const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;\n    return 1 / scaleFOV;\n  } else {\n    return 1;\n  }\n}\n\nfunction objectZIndex(el, camera, zIndexRange) {\n  if (camera instanceof PerspectiveCamera || camera instanceof OrthographicCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const dist = objectPos.distanceTo(cameraPos);\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\n    const B = zIndexRange[1] - A * camera.far;\n    return Math.round(A * dist + B);\n  }\n\n  return undefined;\n}\n\nconst epsilon = value => Math.abs(value) < 1e-10 ? 0 : value;\n\nfunction getCSSMatrix(matrix, multipliers, prepend = '') {\n  let matrix3d = 'matrix3d(';\n\n  for (let i = 0; i !== 16; i++) {\n    matrix3d += epsilon(multipliers[i] * matrix.elements[i]) + (i !== 15 ? ',' : ')');\n  }\n\n  return prepend + matrix3d;\n}\n\nconst getCameraCSSMatrix = (multipliers => {\n  return matrix => getCSSMatrix(matrix, multipliers);\n})([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);\n\nconst getObjectCSSMatrix = (scaleMultipliers => {\n  return (matrix, factor) => getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)');\n})(f => [1 / f, 1 / f, 1 / f, 1, -1 / f, -1 / f, -1 / f, -1, 1 / f, 1 / f, 1 / f, 1, 1, 1, 1, 1]);\n\nconst Html = /*#__PURE__*/React.forwardRef(({\n  children,\n  eps = 0.001,\n  style,\n  className,\n  prepend,\n  center,\n  fullscreen,\n  portal,\n  distanceFactor,\n  sprite = false,\n  transform = false,\n  occlude,\n  onOcclude,\n  zIndexRange = [16777271, 0],\n  calculatePosition = defaultCalculatePosition,\n  as = 'div',\n  wrapperClass,\n  pointerEvents = 'auto',\n  ...props\n}, ref) => {\n  var _portal$current;\n\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const size = useThree(({\n    size\n  }) => size);\n  const raycaster = useThree(({\n    raycaster\n  }) => raycaster);\n  const [el] = React.useState(() => document.createElement(as));\n  const root = React.useMemo(() => ReactDOM.createRoot(el), [el]);\n  const group = React.useRef(null);\n  const oldZoom = React.useRef(0);\n  const oldPosition = React.useRef([0, 0]);\n  const transformOuterRef = React.useRef(null);\n  const transformInnerRef = React.useRef(null);\n  const target = (_portal$current = portal == null ? void 0 : portal.current) !== null && _portal$current !== void 0 ? _portal$current : gl.domElement.parentNode;\n  React.useEffect(() => {\n    if (group.current) {\n      scene.updateMatrixWorld();\n\n      if (transform) {\n        el.style.cssText = `position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;`;\n      } else {\n        const vec = calculatePosition(group.current, camera, size);\n        el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`;\n      }\n\n      if (target) {\n        if (prepend) target.prepend(el);else target.appendChild(el);\n      }\n\n      return () => {\n        if (target) target.removeChild(el);\n        root.unmount();\n      };\n    }\n  }, [target, transform]);\n  React.useLayoutEffect(() => {\n    if (wrapperClass) el.className = wrapperClass;\n  }, [wrapperClass]);\n  const styles = React.useMemo(() => {\n    if (transform) {\n      return {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: size.width,\n        height: size.height,\n        transformStyle: 'preserve-3d',\n        pointerEvents: 'none'\n      };\n    } else {\n      return {\n        position: 'absolute',\n        transform: center ? 'translate3d(-50%,-50%,0)' : 'none',\n        ...(fullscreen && {\n          top: -size.height / 2,\n          left: -size.width / 2,\n          width: size.width,\n          height: size.height\n        }),\n        ...style\n      };\n    }\n  }, [style, center, fullscreen, size, transform]);\n  const transformInnerStyles = React.useMemo(() => ({\n    position: 'absolute',\n    pointerEvents\n  }), [pointerEvents]);\n  React.useLayoutEffect(() => {\n    if (transform) {\n      root.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformOuterRef,\n        style: styles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformInnerRef,\n        style: transformInnerStyles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        className: className,\n        style: style,\n        children: children\n      }))));\n    } else {\n      root.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        style: styles,\n        className: className,\n        children: children\n      }));\n    }\n  });\n  const visible = React.useRef(true);\n  useFrame(() => {\n    if (group.current) {\n      camera.updateMatrixWorld();\n      group.current.updateWorldMatrix(true, false);\n      const vec = transform ? oldPosition.current : calculatePosition(group.current, camera, size);\n\n      if (transform || Math.abs(oldZoom.current - camera.zoom) > eps || Math.abs(oldPosition.current[0] - vec[0]) > eps || Math.abs(oldPosition.current[1] - vec[1]) > eps) {\n        const isBehindCamera = isObjectBehindCamera(group.current, camera);\n        let raytraceTarget = false;\n\n        if (typeof occlude === 'boolean') {\n          if (occlude === true) {\n            raytraceTarget = [scene];\n          }\n        } else if (Array.isArray(occlude)) {\n          raytraceTarget = occlude.map(item => item.current);\n        }\n\n        const previouslyVisible = visible.current;\n\n        if (raytraceTarget) {\n          const isvisible = isObjectVisible(group.current, camera, raycaster, raytraceTarget);\n          visible.current = isvisible && !isBehindCamera;\n        } else {\n          visible.current = !isBehindCamera;\n        }\n\n        if (previouslyVisible !== visible.current) {\n          if (onOcclude) onOcclude(!visible.current);else el.style.display = visible.current ? 'block' : 'none';\n        }\n\n        el.style.zIndex = `${objectZIndex(group.current, camera, zIndexRange)}`;\n\n        if (transform) {\n          const [widthHalf, heightHalf] = [size.width / 2, size.height / 2];\n          const fov = camera.projectionMatrix.elements[5] * heightHalf;\n          const {\n            isOrthographicCamera,\n            top,\n            left,\n            bottom,\n            right\n          } = camera;\n          const cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);\n          const cameraTransform = isOrthographicCamera ? `scale(${fov})translate(${epsilon(-(right + left) / 2)}px,${epsilon((top + bottom) / 2)}px)` : `translateZ(${fov}px)`;\n          let matrix = group.current.matrixWorld;\n\n          if (sprite) {\n            matrix = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix).scale(group.current.scale);\n            matrix.elements[3] = matrix.elements[7] = matrix.elements[11] = 0;\n            matrix.elements[15] = 1;\n          }\n\n          el.style.width = size.width + 'px';\n          el.style.height = size.height + 'px';\n          el.style.perspective = isOrthographicCamera ? '' : `${fov}px`;\n\n          if (transformOuterRef.current && transformInnerRef.current) {\n            transformOuterRef.current.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`;\n            transformInnerRef.current.style.transform = getObjectCSSMatrix(matrix, 1 / ((distanceFactor || 10) / 400));\n          }\n        } else {\n          const scale = distanceFactor === undefined ? 1 : objectScale(group.current, camera) * distanceFactor;\n          el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale})`;\n        }\n\n        oldPosition.current = vec;\n        oldZoom.current = camera.zoom;\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n    ref: group\n  }));\n});\n\nexport { Html };\n"],"names":["Box","useState","size","set","hidden","setVisible","scale","style","transition","opacity","transform","distanceFactor","position","occlude","onOcclude","v","type","value","onChange","e","target","valueAsNumber","Sphere","props","ref","useRef","useFrame","state","current","x","Math","sin","clock","getElapsedTime","args","color","children","dpr","camera","fov","intensity","OrbitControls","React","makeDefault","regress","domElement","enableDamping","onStart","onEnd","restProps","invalidate","useThree","defaultCamera","gl","events","get","performance","explCamera","explDomElement","connected","controls","OrbitControls$1","enabled","update","connect","dispose","callback","addEventListener","removeEventListener","old","_extends","object","v1","Vector3","v2","v3","defaultCalculatePosition","el","objectPos","setFromMatrixPosition","matrixWorld","project","widthHalf","width","heightHalf","height","y","epsilon","abs","getCSSMatrix","matrix","multipliers","prepend","matrix3d","i","elements","getCameraCSSMatrix","getObjectCSSMatrix","factor","f","Html","_portal$current","eps","className","center","fullscreen","portal","sprite","zIndexRange","calculatePosition","as","wrapperClass","pointerEvents","scene","raycaster","document","createElement","root","ReactDOM","group","oldZoom","oldPosition","transformOuterRef","transformInnerRef","parentNode","updateMatrixWorld","cssText","vec","appendChild","removeChild","unmount","styles","top","left","transformStyle","transformInnerStyles","render","visible","updateWorldMatrix","zoom","isBehindCamera","cameraPos","deltaCamObj","sub","camDir","getWorldDirection","angleTo","PI","isObjectBehindCamera","raytraceTarget","Array","isArray","map","item","previouslyVisible","isvisible","elPos","screenPos","clone","setFromCamera","intersects","intersectObjects","length","intersectionDistance","distance","distanceTo","ray","origin","isObjectVisible","display","zIndex","PerspectiveCamera","OrthographicCamera","dist","A","far","near","B","round","objectZIndex","projectionMatrix","isOrthographicCamera","bottom","right","cameraMatrix","matrixWorldInverse","cameraTransform","transpose","copyPosition","perspective","undefined","vFOV","tan","objectScale"],"sourceRoot":""}