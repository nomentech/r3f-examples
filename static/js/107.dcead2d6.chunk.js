"use strict";(self.webpackChunkr3f_examples=self.webpackChunkr3f_examples||[]).push([[107],{2022:function(t,e,n){n.r(e),n.d(e,{default:function(){return E}});var i=n(1413),r=n(2791),a=n(4647),s=n(2794),l=n(9740),u=n(6734),o=n(3520),f=n(5671),c=n(3144),h=n(136),m=n(9388),v=n(7760),d=function(){function t(){(0,f.Z)(this,t),this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}return(0,c.Z)(t,[{key:"setSize",value:function(){}},{key:"render",value:function(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}]),t}(),p=new v.OrthographicCamera(-1,1,1,-1,0,1),g=new v.BufferGeometry;g.setAttribute("position",new v.Float32BufferAttribute([-1,3,0,-1,-1,0,3,-1,0],3)),g.setAttribute("uv",new v.Float32BufferAttribute([0,2,0,0,2,0],2));var x=function(){function t(e){(0,f.Z)(this,t),this._mesh=new v.Mesh(g,e)}return(0,c.Z)(t,[{key:"dispose",value:function(){this._mesh.geometry.dispose()}},{key:"render",value:function(t){t.render(this._mesh,p)}},{key:"material",get:function(){return this._mesh.material},set:function(t){this._mesh.material=t}}]),t}(),b={defines:{USE_3DTEXTURE:1},uniforms:{lut3d:{value:null},lut:{value:null},lutSize:{value:0},tDiffuse:{value:null},intensity:{value:1}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}\n\n\t",fragmentShader:"\n\n\t\tuniform float lutSize;\n\t\t#if USE_3DTEXTURE\n\t\tprecision highp sampler3D;\n\t\tuniform sampler3D lut3d;\n\t\t#else\n\t\tuniform sampler2D lut;\n\n\t\tvec3 lutLookup( sampler2D tex, float size, vec3 rgb ) {\n\n\t\t\tfloat sliceHeight = 1.0 / size;\n\t\t\tfloat yPixelHeight = 1.0 / ( size * size );\n\n\t\t\t// Get the slices on either side of the sample\n\t\t\tfloat slice = rgb.b * size;\n\t\t\tfloat interp = fract( slice );\n\t\t\tfloat slice0 = slice - interp;\n\t\t\tfloat centeredInterp = interp - 0.5;\n\n\t\t\tfloat slice1 = slice0 + sign( centeredInterp );\n\n\t\t\t// Pull y sample in by half a pixel in each direction to avoid color\n\t\t\t// bleeding from adjacent slices.\n\t\t\tfloat greenOffset = clamp( rgb.g * sliceHeight, yPixelHeight * 0.5, sliceHeight - yPixelHeight * 0.5 );\n\n\t\t\tvec2 uv0 = vec2(\n\t\t\t\trgb.r,\n\t\t\t\tslice0 * sliceHeight + greenOffset\n\t\t\t);\n\t\t\tvec2 uv1 = vec2(\n\t\t\t\trgb.r,\n\t\t\t\tslice1 * sliceHeight + greenOffset\n\t\t\t);\n\n\t\t\tvec3 sample0 = texture2D( tex, uv0 ).rgb;\n\t\t\tvec3 sample1 = texture2D( tex, uv1 ).rgb;\n\n\t\t\treturn mix( sample0, sample1, abs( centeredInterp ) );\n\n\t\t}\n\t\t#endif\n\n\t\tvarying vec2 vUv;\n\t\tuniform float intensity;\n\t\tuniform sampler2D tDiffuse;\n\t\tvoid main() {\n\n\t\t\tvec4 val = texture2D( tDiffuse, vUv );\n\t\t\tvec4 lutVal;\n\n\t\t\t// pull the sample in by half a pixel so the sample begins\n\t\t\t// at the center of the edge pixels.\n\t\t\tfloat pixelWidth = 1.0 / lutSize;\n\t\t\tfloat halfPixelWidth = 0.5 / lutSize;\n\t\t\tvec3 uvw = vec3( halfPixelWidth ) + val.rgb * ( 1.0 - pixelWidth );\n\n\t\t\t#if USE_3DTEXTURE\n\n\t\t\tlutVal = vec4( texture( lut3d, uvw ).rgb, val.a );\n\n\t\t\t#else\n\n\t\t\tlutVal = vec4( lutLookup( lut, lutSize, uvw ), val.a );\n\n\t\t\t#endif\n\n\t\t\tgl_FragColor = vec4( mix( val, lutVal, intensity ) );\n\n\t\t}\n\n\t"},y=function(t){(0,h.Z)(n,t);var e=(0,m.Z)(n);function n(){var t,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,f.Z)(this,n),(t=e.call(this,b)).lut=i.lut||null,t.intensity="intensity"in i?i.intensity:1,t}return(0,c.Z)(n,[{key:"lut",get:function(){return this.material.uniforms.lut.value||this.material.uniforms.lut3d.value},set:function(t){var e=this.material;if(t!==this.lut&&(e.uniforms.lut3d.value=null,e.uniforms.lut.value=null,t)){var n=t.isData3DTexture?1:0;n!==e.defines.USE_3DTEXTURE&&(e.defines.USE_3DTEXTURE=n,e.needsUpdate=!0),e.uniforms.lutSize.value=t.image.width,t.isData3DTexture?e.uniforms.lut3d.value=t:e.uniforms.lut.value=t}}},{key:"intensity",get:function(){return this.material.uniforms.intensity.value},set:function(t){this.material.uniforms.intensity.value=t}}]),n}(function(t){(0,h.Z)(n,t);var e=(0,m.Z)(n);function n(t,i){var r;return(0,f.Z)(this,n),(r=e.call(this)).textureID=void 0!==i?i:"tDiffuse",t instanceof v.ShaderMaterial?(r.uniforms=t.uniforms,r.material=t):t&&(r.uniforms=v.UniformsUtils.clone(t.uniforms),r.material=new v.ShaderMaterial({defines:Object.assign({},t.defines),uniforms:r.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader})),r.fsQuad=new x(r.material),r}return(0,c.Z)(n,[{key:"render",value:function(t,e,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(e),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),this.fsQuad.render(t))}}]),n}(d)),D=(n.p,n.p+"static/media/terrazo.a6a7bb924eea32d37fe1.png"),S=n(184);(0,s.e)({LUTPass:y});var T=function(t){var e=(0,l.m)(D);return(0,S.jsxs)("mesh",(0,i.Z)((0,i.Z)({},t),{},{children:[(0,S.jsx)("sphereBufferGeometry",{args:[1,64,64]}),(0,S.jsx)("meshPhysicalMaterial",{envMapIntensity:.4,map:e,clearcoat:.8,clearcoatRoughness:0,roughness:1,metalness:0})]}))},E=function(t){var e=t.children;return(0,S.jsxs)(S.Fragment,{children:[e,(0,S.jsxs)(a.Xz,{frameloop:"demand",dpr:[1,2],camera:{position:[0,0,5],fov:45},className:"bg-gradient-to-br from-[#cbbacc] to-[#2580b3]",children:[(0,S.jsx)("spotLight",{intensity:.5,angle:.2,penumbra:1,position:[5,15,10]}),(0,S.jsxs)(r.Suspense,{fallback:null,children:[(0,S.jsx)(T,{}),(0,S.jsx)(u.qA,{preset:"warehouse"})]}),(0,S.jsx)(o.z,{})]})]})}},9740:function(t,e,n){n.d(e,{m:function(){return u}});var i=n(4942),r=n(7760),a=n(2794),s=n(2791),l=function(t){return t===Object(t)&&!Array.isArray(t)&&"function"!==typeof t};function u(t){var e=(0,a.w)((function(t){return t.gl})),n=(0,a.z)(r.TextureLoader,l(t)?Object.values(t):t);if((0,s.useEffect)((function(){(Array.isArray(n)?n:[n]).forEach(e.initTexture)}),[e,n]),l(t)){var u=Object.keys(t),o={};return u.forEach((function(t){return Object.assign(o,(0,i.Z)({},t,n[u.indexOf(t)]))})),o}return n}u.preload=function(t){return a.z.preload(r.TextureLoader,t)},u.clear=function(t){return a.z.clear(r.TextureLoader,t)}}}]);
//# sourceMappingURL=107.dcead2d6.chunk.js.map