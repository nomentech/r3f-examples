{"version":3,"file":"static/js/383.6906c45f.chunk.js","mappings":"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","sources":["../node_modules/three-stdlib/shaders/HorizontalBlurShader.js","../node_modules/three-stdlib/shaders/VerticalBlurShader.js","../node_modules/@react-three/drei/core/ContactShadows.js","../node_modules/three-stdlib/controls/OrbitControls.js","../node_modules/@react-three/drei/core/OrbitControls.js"],"sourcesContent":["/**\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n */\nconst HorizontalBlurShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    h: {\n      value: 1.0 / 512.0\n    }\n  },\n  vertexShader:\n  /* glsl */\n  `\n      varying vec2 vUv;\n\n      void main() {\n\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n      }\n  `,\n  fragmentShader:\n  /* glsl */\n  `\n    uniform sampler2D tDiffuse;\n    uniform float h;\n\n    varying vec2 vUv;\n\n    void main() {\n\n    \tvec4 sum = vec4( 0.0 );\n\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\n    \tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\n\n    \tgl_FragColor = sum;\n\n    }\n  `\n};\n\nexport { HorizontalBlurShader };\n","/**\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n */\nconst VerticalBlurShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    v: {\n      value: 1.0 / 512.0\n    }\n  },\n  vertexShader:\n  /* glsl */\n  `\n    varying vec2 vUv;\n\n    void main() {\n\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n    }\n  `,\n  fragmentShader:\n  /* glsl */\n  `\n\n  uniform sampler2D tDiffuse;\n  uniform float v;\n\n  varying vec2 vUv;\n\n  void main() {\n\n    vec4 sum = vec4( 0.0 );\n\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\n    sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\n\n    gl_FragColor = sum;\n\n  }\n  `\n};\n\nexport { VerticalBlurShader };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\n\nconst ContactShadows = /*#__PURE__*/React.forwardRef(({\n  scale = 10,\n  frames = Infinity,\n  opacity = 1,\n  width = 1,\n  height = 1,\n  blur = 1,\n  far = 10,\n  resolution = 512,\n  smooth = true,\n  color = '#000000',\n  depthWrite = false,\n  renderOrder,\n  ...props\n}, ref) => {\n  const scene = useThree(state => state.scene);\n  const gl = useThree(state => state.gl);\n  const shadowCamera = React.useRef(null);\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n  const [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur] = React.useMemo(() => {\n    const renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n    const renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n    const planeGeometry = new THREE.PlaneBufferGeometry(width, height).rotateX(Math.PI / 2);\n    const blurPlane = new THREE.Mesh(planeGeometry);\n    const depthMaterial = new THREE.MeshDepthMaterial();\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\n\n    depthMaterial.onBeforeCompile = shader => {\n      shader.uniforms = { ...shader.uniforms,\n        ucolor: {\n          value: new THREE.Color(color).convertSRGBToLinear()\n        }\n      };\n      shader.fragmentShader = shader.fragmentShader.replace(`void main() {`, //\n      `uniform vec3 ucolor;\n           void main() {\n          `);\n      shader.fragmentShader = shader.fragmentShader.replace('vec4( vec3( 1.0 - fragCoordZ ), opacity );', 'vec4( ucolor, ( 1.0 - fragCoordZ ) * 1.0 );');\n    };\n\n    const horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n    const verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n  }, [resolution, width, height, scale, color]);\n\n  const blurShadows = blur => {\n    blurPlane.visible = true;\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTargetBlur);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTarget);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.visible = false;\n  };\n\n  let count = 0;\n  useFrame(() => {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      const initialBackground = scene.background;\n      scene.background = null;\n      const initialOverrideMaterial = scene.overrideMaterial;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      scene.overrideMaterial = initialOverrideMaterial;\n      blurShadows(blur);\n      if (smooth) blurShadows(blur * 0.4);\n      gl.setRenderTarget(null);\n      scene.background = initialBackground;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: renderOrder,\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    map: renderTarget.texture,\n    \"map-encoding\": gl.outputEncoding,\n    transparent: true,\n    opacity: opacity,\n    depthWrite: depthWrite\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\n\nexport { ContactShadows };\n","import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, PerspectiveCamera, Quaternion, Spherical, Vector2, OrthographicCamera } from 'three';\n\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\n\nclass OrbitControls extends EventDispatcher {\n  // Set to false to disable this control\n  // \"target\" sets the location of focus, where the object orbits around\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  // How far you can zoom in and out ( OrthographicCamera only )\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  // radians\n  // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  // radians\n  // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  // Set to false to disable rotating\n  // Set to false to disable panning\n  // if false, pan orthogonal to world-space direction camera.up\n  // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  // 30 seconds per orbit when fps is 60\n  // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n  // The four arrow keys\n  // Mouse buttons\n  // Touch fingers\n  // the target DOM element for key events\n  constructor(object, domElement) {\n    super();\n\n    _defineProperty(this, \"object\", void 0);\n\n    _defineProperty(this, \"domElement\", void 0);\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"target\", new Vector3());\n\n    _defineProperty(this, \"minDistance\", 0);\n\n    _defineProperty(this, \"maxDistance\", Infinity);\n\n    _defineProperty(this, \"minZoom\", 0);\n\n    _defineProperty(this, \"maxZoom\", Infinity);\n\n    _defineProperty(this, \"minPolarAngle\", 0);\n\n    _defineProperty(this, \"maxPolarAngle\", Math.PI);\n\n    _defineProperty(this, \"minAzimuthAngle\", -Infinity);\n\n    _defineProperty(this, \"maxAzimuthAngle\", Infinity);\n\n    _defineProperty(this, \"enableDamping\", false);\n\n    _defineProperty(this, \"dampingFactor\", 0.05);\n\n    _defineProperty(this, \"enableZoom\", true);\n\n    _defineProperty(this, \"zoomSpeed\", 1.0);\n\n    _defineProperty(this, \"enableRotate\", true);\n\n    _defineProperty(this, \"rotateSpeed\", 1.0);\n\n    _defineProperty(this, \"enablePan\", true);\n\n    _defineProperty(this, \"panSpeed\", 1.0);\n\n    _defineProperty(this, \"screenSpacePanning\", true);\n\n    _defineProperty(this, \"keyPanSpeed\", 7.0);\n\n    _defineProperty(this, \"autoRotate\", false);\n\n    _defineProperty(this, \"autoRotateSpeed\", 2.0);\n\n    _defineProperty(this, \"reverseOrbit\", false);\n\n    _defineProperty(this, \"keys\", {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    });\n\n    _defineProperty(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n\n    _defineProperty(this, \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n\n    _defineProperty(this, \"target0\", void 0);\n\n    _defineProperty(this, \"position0\", void 0);\n\n    _defineProperty(this, \"zoom0\", void 0);\n\n    _defineProperty(this, \"_domElementKeyEvents\", null);\n\n    _defineProperty(this, \"getPolarAngle\", void 0);\n\n    _defineProperty(this, \"getAzimuthalAngle\", void 0);\n\n    _defineProperty(this, \"setPolarAngle\", void 0);\n\n    _defineProperty(this, \"setAzimuthalAngle\", void 0);\n\n    _defineProperty(this, \"getDistance\", void 0);\n\n    _defineProperty(this, \"listenToKeyEvents\", void 0);\n\n    _defineProperty(this, \"saveState\", void 0);\n\n    _defineProperty(this, \"reset\", void 0);\n\n    _defineProperty(this, \"update\", void 0);\n\n    _defineProperty(this, \"connect\", void 0);\n\n    _defineProperty(this, \"dispose\", void 0);\n\n    this.object = object;\n    this.domElement = domElement; // for reset\n\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object instanceof PerspectiveCamera ? this.object.zoom : 1; //\n    // public methods\n    //\n\n    this.getPolarAngle = () => spherical.phi;\n\n    this.getAzimuthalAngle = () => spherical.theta;\n\n    this.setPolarAngle = value => {\n      // use modulo wrapping to safeguard value\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi; // convert to the equivalent shortest angle\n\n      if (currentPhi < 0) currentPhi += 2 * Math.PI;\n      if (phi < 0) phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n\n    this.setAzimuthalAngle = value => {\n      // use modulo wrapping to safeguard value\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta; // convert to the equivalent shortest angle\n\n      if (currentTheta < 0) currentTheta += 2 * Math.PI;\n      if (theta < 0) theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n\n    this.listenToKeyEvents = domElement => {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object instanceof PerspectiveCamera ? scope.object.zoom : 1;\n    };\n\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n\n      if (scope.object instanceof PerspectiveCamera) {\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n      }\n\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    this.update = (() => {\n      const offset = new Vector3(); // so camera.up is the orbit axis\n\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    })(); // https://github.com/mrdoob/three.js/issues/20575\n\n\n    this.connect = domElement => {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n\n      scope.domElement = domElement; // disables touch scroll\n      // touch-action needs to be defined for pointer events to work on mobile\n      // https://stackoverflow.com/a/48254578\n\n      scope.domElement.style.touchAction = 'none';\n      scope.domElement.addEventListener('contextmenu', onContextMenu);\n      scope.domElement.addEventListener('pointerdown', onPointerDown);\n      scope.domElement.addEventListener('pointercancel', onPointerCancel);\n      scope.domElement.addEventListener('wheel', onMouseWheel);\n    };\n\n    this.dispose = () => {\n      var _scope$domElement, _scope$domElement2, _scope$domElement3, _scope$domElement4, _scope$domElement5, _scope$domElement6;\n\n      (_scope$domElement = scope.domElement) === null || _scope$domElement === void 0 ? void 0 : _scope$domElement.removeEventListener('contextmenu', onContextMenu);\n      (_scope$domElement2 = scope.domElement) === null || _scope$domElement2 === void 0 ? void 0 : _scope$domElement2.removeEventListener('pointerdown', onPointerDown);\n      (_scope$domElement3 = scope.domElement) === null || _scope$domElement3 === void 0 ? void 0 : _scope$domElement3.removeEventListener('pointercancel', onPointerCancel);\n      (_scope$domElement4 = scope.domElement) === null || _scope$domElement4 === void 0 ? void 0 : _scope$domElement4.removeEventListener('wheel', onMouseWheel);\n      (_scope$domElement5 = scope.domElement) === null || _scope$domElement5 === void 0 ? void 0 : _scope$domElement5.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement6 = scope.domElement) === null || _scope$domElement6 === void 0 ? void 0 : _scope$domElement6.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    const scope = this;\n    const changeEvent = {\n      type: 'change'\n    };\n    const startEvent = {\n      type: 'start'\n    };\n    const endEvent = {\n      type: 'end'\n    };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 0.000001; // current position in spherical coordinates\n\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const pointers = [];\n    const pointerPositions = {};\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n\n    function rotateUp(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    })();\n\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    } //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      if (pointers.length === 0) {\n        var _scope$domElement7, _scope$domElement8;\n\n        (_scope$domElement7 = scope.domElement) === null || _scope$domElement7 === void 0 ? void 0 : _scope$domElement7.ownerDocument.addEventListener('pointermove', onPointerMove);\n        (_scope$domElement8 = scope.domElement) === null || _scope$domElement8 === void 0 ? void 0 : _scope$domElement8.ownerDocument.addEventListener('pointerup', onPointerUp);\n      }\n\n      addPointer(event);\n\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n\n    function onPointerUp(event) {\n      removePointer(event);\n\n      if (pointers.length === 0) {\n        var _scope$domElement9, _scope$domElement10, _scope$domElement11;\n\n        (_scope$domElement9 = scope.domElement) === null || _scope$domElement9 === void 0 ? void 0 : _scope$domElement9.releasePointerCapture(event.pointerId);\n        (_scope$domElement10 = scope.domElement) === null || _scope$domElement10 === void 0 ? void 0 : _scope$domElement10.ownerDocument.removeEventListener('pointermove', onPointerMove);\n        (_scope$domElement11 = scope.domElement) === null || _scope$domElement11 === void 0 ? void 0 : _scope$domElement11.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      }\n\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n\n    function onMouseDown(event) {\n      let mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event);\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event);\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n\n    function addPointer(event) {\n      pointers.push(event);\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n\n      if (position === undefined) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n\n      position.set(event.pageX, event.pageY);\n    }\n\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    } // connect events\n\n\n    if (domElement !== undefined) this.connect(domElement); // force an update at start\n\n    this.update();\n  }\n\n} // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n\n}\n\nexport { MapControls, OrbitControls };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n"],"names":["HorizontalBlurShader","uniforms","tDiffuse","value","h","vertexShader","fragmentShader","VerticalBlurShader","v","ContactShadows","React","ref","scale","frames","Infinity","opacity","width","height","blur","far","resolution","smooth","color","depthWrite","renderOrder","props","scene","useThree","state","gl","shadowCamera","Array","isArray","renderTarget","THREE","renderTargetBlur","texture","generateMipmaps","planeGeometry","rotateX","Math","PI","blurPlane","depthMaterial","depthTest","onBeforeCompile","shader","ucolor","convertSRGBToLinear","replace","horizontalBlurMaterial","verticalBlurMaterial","blurShadows","visible","material","setRenderTarget","render","current","count","useFrame","initialBackground","background","initialOverrideMaterial","overrideMaterial","_extends","geometry","rotation","map","outputEncoding","transparent","args","moduloWrapAround","offset","capacity","OrbitControls","object","domElement","_defineProperty","Vector3","LEFT","UP","RIGHT","BOTTOM","MOUSE","MIDDLE","ONE","TOUCH","TWO","target0","target","clone","position0","position","zoom0","PerspectiveCamera","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","setPolarAngle","currentPhi","phiDist","abs","sphericalDelta","scope","update","setAzimuthalAngle","currentTheta","thetaDist","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","_domElementKeyEvents","saveState","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","STATE","NONE","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","autoRotate","rotateLeft","autoRotateSpeed","enableDamping","dampingFactor","min","minAzimuthAngle","max","maxAzimuthAngle","isFinite","minPolarAngle","maxPolarAngle","makeSafe","radius","minDistance","maxDistance","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","connect","document","console","error","style","touchAction","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","dispose","_scope$domElement","_scope$domElement2","_scope$domElement3","_scope$domElement4","_scope$domElement5","_scope$domElement6","removeEventListener","ownerDocument","onPointerMove","onPointerUp","type","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","zoomSpeed","angle","reverseOrbit","rotateUp","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","screenSpacePanning","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","OrthographicCamera","isOrthographicCamera","right","left","clientWidth","top","bottom","warn","enablePan","dollyOut","dollyScale","minZoom","maxZoom","enableZoom","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","rotateSpeed","handleTouchMovePan","panSpeed","handleTouchMoveDolly","enabled","_scope$domElement7","_scope$domElement8","push","addPointer","pointerType","trackPointer","touches","enableRotate","onTouchStart","mouseAction","button","mouseButtons","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","_scope$domElement9","_scope$domElement10","_scope$domElement11","removePointer","releasePointerCapture","pointerId","preventDefault","handleMouseWheel","needsUpdate","code","keys","keyPanSpeed","handleKeyDown","i","splice","undefined","pointer","EventDispatcher","makeDefault","camera","regress","onChange","onStart","onEnd","restProps","invalidate","defaultCamera","events","get","performance","explCamera","explDomElement","connected","controls","OrbitControls$1","callback","e","old"],"sourceRoot":""}