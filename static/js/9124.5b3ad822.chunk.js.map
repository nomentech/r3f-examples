{"version":3,"file":"static/js/9124.5b3ad822.chunk.js","mappings":"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","sources":["basic-examples/gltf-animations-re-used/Model.tsx","basic-examples/gltf-animations-re-used/Example.tsx"],"sourcesContent":["/*\nThis file was generated by https://github.com/pmndrs/gltfjsx and then\ncustomized manually. It uses drei's new useAnimations hook which extracts\nall actions and sets up a THREE.AnimationMixer for it so that you don't have to.\nAll of the assets actions, action-names and clips are available in its output. \n*/\n\nimport { useEffect, useMemo, useState } from 'react'\nimport { SkeletonUtils } from 'three-stdlib'\nimport { useGraph } from '@react-three/fiber'\nimport { useAnimations, useCursor, useGLTF, useTexture } from '@react-three/drei'\nimport { a, useSpring } from '@react-spring/three'\n\nimport model from '../../models/stacy.glb'\nimport texturePath from '../../textures/stacy.jpg'\n\nconst Model = ({ pose, ...props}: any) => {\n  // Fetch model and a separate texture\n  const { scene, animations } = useGLTF(model) as any\n  const texture = useTexture(texturePath)\n\n  // Skinned meshes cannot be re-used in threejs without cloning them\n  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene])\n  // useGraph creates two flat object collections for nodes and materials\n  const { nodes } = useGraph(clone) as any\n\n  // Extract animation actions\n  const { ref, actions, names } = useAnimations(animations)\n\n  // Hover and animation-index states\n  const [hovered, setHovered] = useState(false)\n  const [index, setIndex] = useState(pose)\n\n  // Animate the selection halo\n  const { color, scale } = useSpring({ \n    scale: hovered ? [1.15, 1.15, 1] : [1, 1, 1], \n    color: hovered ? 'hotpink' : 'aquamarine' \n  }) as any\n\n  // Change cursor on hover-state\n  useCursor(hovered)\n\n  // Change animation when the index changes\n  useEffect(() => {\n    // Reset and fade in animation after an index has been changed\n    actions[names[index]]?.reset().fadeIn(0.5).play()\n    // In the clean-up phase, fade it out\n    return () => actions[names[index]]?.fadeOut(0.5) as any\n  }, [index, actions, names])\n\n  return (\n    <group ref={ref} {...props} dispose={null} >\n      <group \n        onPointerOver={() => setHovered(true)}\n        onPointerOut={() => setHovered(false)}\n        onClick={() => setIndex((index + 1) % names.length)}\n        rotation-x={Math.PI / 2} \n        scale={0.01}>\n        <primitive object={nodes.mixamorigHips} />\n        <skinnedMesh\n          castShadow\n          receiveShadow\n          geometry={nodes.stacy.geometry}\n          skeleton={nodes.stacy.skeleton}\n          rotation-x={-Math.PI / 2}\n          scale={100}>\n          <meshStandardMaterial map={texture} map-flipY={false} /> \n        </skinnedMesh>\n      </group>\n      <a.mesh receiveShadow position={[0, 1, -1]} scale={scale}>\n        <circleBufferGeometry args={[0.6, 64]} />\n        {/* @ts-ignore */}\n        <a.meshStandardMaterial color={color} />\n      </a.mesh>\n    </group>\n  )\n}\n\nexport default Model","import { Suspense } from 'react'\nimport * as THREE from 'three'\nimport { Canvas, useFrame } from '@react-three/fiber'\n\nimport Model from './Model'\n\nconst Rig = () => {\n  return useFrame((state) => {\n    state.camera.position.x = THREE.MathUtils.lerp(state.camera.position.x, 1.5 + state.mouse.x / 4, 0.075)\n    state.camera.position.y = THREE.MathUtils.lerp(state.camera.position.y, 1.5 + state.mouse.y / 4, 0.075)\n  })\n}\n\nconst Example = ({ children }: any) => {\n  return (\n    <>\n      { children }\n      <Canvas shadows camera={{position: [1, 1.5, 2.5], fov: 50}} >\n        <ambientLight />\n        <directionalLight position={[-5, 5, 5]} castShadow shadow-mapSize={[1024, 1024]} />\n        <group position={[0, -1, 0]}>\n          <Suspense fallback={null}>\n            <Model pose={4} position={[0, 0, 0]} />\n            <Model pose={1} position={[1, 0, -1]} />\n            <Model pose={2} position={[-1, 0, -1]} />\n          </Suspense>\n        </group>\n        <mesh rotation={[-0.5 * Math.PI, 0, 0]} position={[0, -1, 0]} receiveShadow>\n          <planeBufferGeometry args={[10, 10, 1, 1]} />\n          <shadowMaterial transparent opacity={0.2} />\n        </mesh>\n        <Rig />\n      </Canvas>\n    </>\n  )\n}\n\nexport default Example"],"names":["pose","props","useGLTF","model","scene","animations","texture","useTexture","texturePath","clone","useMemo","SkeletonUtils","nodes","useGraph","useAnimations","ref","actions","names","useState","hovered","setHovered","index","setIndex","useSpring","scale","color","useCursor","useEffect","reset","fadeIn","play","fadeOut","dispose","onPointerOver","onPointerOut","onClick","length","Math","PI","object","mixamorigHips","castShadow","receiveShadow","geometry","stacy","skeleton","map","a","position","args","Rig","useFrame","state","camera","x","THREE","mouse","y","children","shadows","fov","Suspense","fallback","rotation","transparent","opacity"],"sourceRoot":""}