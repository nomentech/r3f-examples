{"version":3,"file":"static/js/746.514f2f46.chunk.js","mappings":"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","sources":["basic-examples/mixing-html-and-webgl/Example.tsx","../node_modules/@react-three/drei/web/Html.js"],"sourcesContent":["import { useRef, useState } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { Html, OrbitControls } from '@react-three/drei'\n\nconst Box = () => {\n  const [size, set] = useState(2)\n  const [hidden, setVisible] = useState(false)\n  return (\n    <mesh scale={size * 0.5}>\n      <boxGeometry />\n      <meshStandardMaterial />\n      <Html\n        style={{\n          transition: 'all 0.2s',\n          opacity: hidden ? 0 : 1,\n          transform: `scale(${hidden ? 0.5 : 1})`\n        }}\n        distanceFactor={1.5}\n        position={[0, 0, 0.51]}\n        transform\n        occlude\n        onOcclude={(v) => {setVisible(v); return null}}>\n        <span>Size: </span>\n        <input type='number' value={size} \n          onChange={e => set(e.target.valueAsNumber)} />\n      </Html>\n    </mesh>\n  )\n}\n\nconst Sphere = (props: any) => {\n  const ref: any = useRef()\n  useFrame(\n    (state) => \n      ref.current.position.x = Math.sin(state.clock.getElapsedTime())\n  )\n  return (\n    <mesh ref={ref} {...props}>\n      <sphereGeometry args={[0.3, 32, 32]} />\n      <meshStandardMaterial color={'orange'} />\n    </mesh>\n  )\n} \n\nconst Example = ({ children }: any) => {\n  return (\n    <>\n      { children }\n      <Canvas dpr={[1, 2]} camera={{ fov: 25 }}>\n        <ambientLight intensity={0.5} />\n        <pointLight position={[10, 10, 5]} />\n        <pointLight position={[-10, -10, -10]} />\n        <Box />\n        <Sphere position={[0, 0, 1]} />\n        <OrbitControls />\n      </Canvas>\n    </>\n  )\n}\n\nexport default Example","import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport { Vector3, OrthographicCamera, PerspectiveCamera } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst v1 = new Vector3();\nconst v2 = new Vector3();\nconst v3 = new Vector3();\n\nfunction defaultCalculatePosition(el, camera, size) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\n}\n\nfunction isObjectBehindCamera(el, camera) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n  const deltaCamObj = objectPos.sub(cameraPos);\n  const camDir = camera.getWorldDirection(v3);\n  return deltaCamObj.angleTo(camDir) > Math.PI / 2;\n}\n\nfunction isObjectVisible(el, camera, raycaster, occlude) {\n  const elPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const screenPos = elPos.clone();\n  screenPos.project(camera);\n  raycaster.setFromCamera(screenPos, camera);\n  const intersects = raycaster.intersectObjects(occlude, true);\n\n  if (intersects.length) {\n    const intersectionDistance = intersects[0].distance;\n    const pointDistance = elPos.distanceTo(raycaster.ray.origin);\n    return pointDistance < intersectionDistance;\n  }\n\n  return true;\n}\n\nfunction objectScale(el, camera) {\n  if (camera instanceof OrthographicCamera) {\n    return camera.zoom;\n  } else if (camera instanceof PerspectiveCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const vFOV = camera.fov * Math.PI / 180;\n    const dist = objectPos.distanceTo(cameraPos);\n    const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;\n    return 1 / scaleFOV;\n  } else {\n    return 1;\n  }\n}\n\nfunction objectZIndex(el, camera, zIndexRange) {\n  if (camera instanceof PerspectiveCamera || camera instanceof OrthographicCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const dist = objectPos.distanceTo(cameraPos);\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\n    const B = zIndexRange[1] - A * camera.far;\n    return Math.round(A * dist + B);\n  }\n\n  return undefined;\n}\n\nconst epsilon = value => Math.abs(value) < 1e-10 ? 0 : value;\n\nfunction getCSSMatrix(matrix, multipliers, prepend = '') {\n  let matrix3d = 'matrix3d(';\n\n  for (let i = 0; i !== 16; i++) {\n    matrix3d += epsilon(multipliers[i] * matrix.elements[i]) + (i !== 15 ? ',' : ')');\n  }\n\n  return prepend + matrix3d;\n}\n\nconst getCameraCSSMatrix = (multipliers => {\n  return matrix => getCSSMatrix(matrix, multipliers);\n})([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);\n\nconst getObjectCSSMatrix = (scaleMultipliers => {\n  return (matrix, factor) => getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)');\n})(f => [1 / f, 1 / f, 1 / f, 1, -1 / f, -1 / f, -1 / f, -1, 1 / f, 1 / f, 1 / f, 1, 1, 1, 1, 1]);\n\nconst Html = /*#__PURE__*/React.forwardRef(({\n  children,\n  eps = 0.001,\n  style,\n  className,\n  prepend,\n  center,\n  fullscreen,\n  portal,\n  distanceFactor,\n  sprite = false,\n  transform = false,\n  occlude,\n  onOcclude,\n  zIndexRange = [16777271, 0],\n  calculatePosition = defaultCalculatePosition,\n  as = 'div',\n  wrapperClass,\n  pointerEvents = 'auto',\n  ...props\n}, ref) => {\n  var _portal$current;\n\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const size = useThree(({\n    size\n  }) => size);\n  const raycaster = useThree(({\n    raycaster\n  }) => raycaster);\n  const [el] = React.useState(() => document.createElement(as));\n  const root = React.useMemo(() => ReactDOM.createRoot(el), [el]);\n  const group = React.useRef(null);\n  const oldZoom = React.useRef(0);\n  const oldPosition = React.useRef([0, 0]);\n  const transformOuterRef = React.useRef(null);\n  const transformInnerRef = React.useRef(null);\n  const target = (_portal$current = portal == null ? void 0 : portal.current) !== null && _portal$current !== void 0 ? _portal$current : gl.domElement.parentNode;\n  React.useEffect(() => {\n    if (group.current) {\n      scene.updateMatrixWorld();\n\n      if (transform) {\n        el.style.cssText = `position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;`;\n      } else {\n        const vec = calculatePosition(group.current, camera, size);\n        el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`;\n      }\n\n      if (target) {\n        if (prepend) target.prepend(el);else target.appendChild(el);\n      }\n\n      return () => {\n        if (target) target.removeChild(el);\n        root.unmount();\n      };\n    }\n  }, [target, transform]);\n  React.useLayoutEffect(() => {\n    if (wrapperClass) el.className = wrapperClass;\n  }, [wrapperClass]);\n  const styles = React.useMemo(() => {\n    if (transform) {\n      return {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: size.width,\n        height: size.height,\n        transformStyle: 'preserve-3d',\n        pointerEvents: 'none'\n      };\n    } else {\n      return {\n        position: 'absolute',\n        transform: center ? 'translate3d(-50%,-50%,0)' : 'none',\n        ...(fullscreen && {\n          top: -size.height / 2,\n          left: -size.width / 2,\n          width: size.width,\n          height: size.height\n        }),\n        ...style\n      };\n    }\n  }, [style, center, fullscreen, size, transform]);\n  const transformInnerStyles = React.useMemo(() => ({\n    position: 'absolute',\n    pointerEvents\n  }), [pointerEvents]);\n  React.useLayoutEffect(() => {\n    if (transform) {\n      root.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformOuterRef,\n        style: styles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformInnerRef,\n        style: transformInnerStyles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        className: className,\n        style: style,\n        children: children\n      }))));\n    } else {\n      root.render( /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        style: styles,\n        className: className,\n        children: children\n      }));\n    }\n  });\n  const visible = React.useRef(true);\n  useFrame(() => {\n    if (group.current) {\n      camera.updateMatrixWorld();\n      group.current.updateWorldMatrix(true, false);\n      const vec = transform ? oldPosition.current : calculatePosition(group.current, camera, size);\n\n      if (transform || Math.abs(oldZoom.current - camera.zoom) > eps || Math.abs(oldPosition.current[0] - vec[0]) > eps || Math.abs(oldPosition.current[1] - vec[1]) > eps) {\n        const isBehindCamera = isObjectBehindCamera(group.current, camera);\n        let raytraceTarget = false;\n\n        if (typeof occlude === 'boolean') {\n          if (occlude === true) {\n            raytraceTarget = [scene];\n          }\n        } else if (Array.isArray(occlude)) {\n          raytraceTarget = occlude.map(item => item.current);\n        }\n\n        const previouslyVisible = visible.current;\n\n        if (raytraceTarget) {\n          const isvisible = isObjectVisible(group.current, camera, raycaster, raytraceTarget);\n          visible.current = isvisible && !isBehindCamera;\n        } else {\n          visible.current = !isBehindCamera;\n        }\n\n        if (previouslyVisible !== visible.current) {\n          if (onOcclude) onOcclude(!visible.current);else el.style.display = visible.current ? 'block' : 'none';\n        }\n\n        el.style.zIndex = `${objectZIndex(group.current, camera, zIndexRange)}`;\n\n        if (transform) {\n          const [widthHalf, heightHalf] = [size.width / 2, size.height / 2];\n          const fov = camera.projectionMatrix.elements[5] * heightHalf;\n          const {\n            isOrthographicCamera,\n            top,\n            left,\n            bottom,\n            right\n          } = camera;\n          const cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);\n          const cameraTransform = isOrthographicCamera ? `scale(${fov})translate(${epsilon(-(right + left) / 2)}px,${epsilon((top + bottom) / 2)}px)` : `translateZ(${fov}px)`;\n          let matrix = group.current.matrixWorld;\n\n          if (sprite) {\n            matrix = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix).scale(group.current.scale);\n            matrix.elements[3] = matrix.elements[7] = matrix.elements[11] = 0;\n            matrix.elements[15] = 1;\n          }\n\n          el.style.width = size.width + 'px';\n          el.style.height = size.height + 'px';\n          el.style.perspective = isOrthographicCamera ? '' : `${fov}px`;\n\n          if (transformOuterRef.current && transformInnerRef.current) {\n            transformOuterRef.current.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`;\n            transformInnerRef.current.style.transform = getObjectCSSMatrix(matrix, 1 / ((distanceFactor || 10) / 400));\n          }\n        } else {\n          const scale = distanceFactor === undefined ? 1 : objectScale(group.current, camera) * distanceFactor;\n          el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale})`;\n        }\n\n        oldPosition.current = vec;\n        oldZoom.current = camera.zoom;\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n    ref: group\n  }));\n});\n\nexport { Html };\n"],"names":["Box","useState","size","set","hidden","setVisible","scale","style","transition","opacity","transform","distanceFactor","position","occlude","onOcclude","v","type","value","onChange","e","target","valueAsNumber","Sphere","props","ref","useRef","useFrame","state","current","x","Math","sin","clock","getElapsedTime","args","color","children","dpr","camera","fov","intensity","v1","Vector3","v2","v3","defaultCalculatePosition","el","objectPos","setFromMatrixPosition","matrixWorld","project","widthHalf","width","heightHalf","height","y","epsilon","abs","getCSSMatrix","matrix","multipliers","prepend","matrix3d","i","elements","getCameraCSSMatrix","getObjectCSSMatrix","factor","f","Html","React","_portal$current","eps","className","center","fullscreen","portal","sprite","zIndexRange","calculatePosition","as","wrapperClass","pointerEvents","gl","useThree","scene","raycaster","document","createElement","root","ReactDOM","group","oldZoom","oldPosition","transformOuterRef","transformInnerRef","domElement","parentNode","updateMatrixWorld","cssText","vec","appendChild","removeChild","unmount","styles","top","left","transformStyle","transformInnerStyles","render","visible","updateWorldMatrix","zoom","isBehindCamera","cameraPos","deltaCamObj","sub","camDir","getWorldDirection","angleTo","PI","isObjectBehindCamera","raytraceTarget","Array","isArray","map","item","previouslyVisible","isvisible","elPos","screenPos","clone","setFromCamera","intersects","intersectObjects","length","intersectionDistance","distance","distanceTo","ray","origin","isObjectVisible","display","zIndex","PerspectiveCamera","OrthographicCamera","dist","A","far","near","B","round","objectZIndex","projectionMatrix","isOrthographicCamera","bottom","right","cameraMatrix","matrixWorldInverse","cameraTransform","transpose","copyPosition","perspective","undefined","vFOV","tan","objectScale","_extends"],"sourceRoot":""}