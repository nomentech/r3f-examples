{"version":3,"file":"static/js/7816.566fb6ed.chunk.js","mappings":"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","sources":["basic-examples/instances/Example.tsx","../node_modules/@react-three/drei/core/OrbitControls.js"],"sourcesContent":["import { useLayoutEffect, useRef, useState } from 'react'\nimport * as THREE from 'three'\nimport { Canvas } from '@react-three/fiber'\nimport { OrbitControls } from '@react-three/drei'\nimport niceColors from 'nice-color-palettes'\n\nconst length = 125000\nconst o = new THREE.Object3D()\nconst c = new THREE.Color()\nconst colors = Array.from(\n  { length }, \n  () => niceColors[17][Math.floor(Math.random() * 5)]\n)\n\nconst Boxes = () => {\n  const ref: any = useRef()\n  const [colorArray] = useState(() => \n    Float32Array.from(\n      Array.from({ length }, \n      (_, i) => \n        c.set(colors[i]).convertSRGBToLinear().toArray()).flat()\n    )\n  )\n\n  useLayoutEffect(() => {\n    let i = 0\n    for (let x=0; x<50; x++)\n      for (let y=0; y<50; y++)\n        for (let z=0; z<50; z++) {\n          const id = i++\n          o.position.set(25-x, 25-y, 25-z)\n          o.updateMatrix()\n          ref.current.setMatrixAt(id, o.matrix)\n        }\n    ref.current.instanceMatrix.needUpdate = true\n  }, [])\n\n  return (\n    <instancedMesh ref={ref} args={[undefined, undefined, length]}>\n      <boxGeometry args={[0.15, 0.15, 0.15]}>\n        <instancedBufferAttribute attach='attributes-color' args={[colorArray, 3]} />  \n      </boxGeometry>\n      <meshLambertMaterial vertexColors={true} toneMapped={false} />\n    </instancedMesh>\n  )\n}\n\nconst Example = ({ children }: any) => {\n  return (\n    <>\n      { children }\n      <Canvas camera={{ position: [0, 0, 0.1] }} >\n        <color attach='background' args={[0xf0f0f0]} />\n        <ambientLight />\n        <directionalLight position={[150, 150, 150]} intensity={0.55} />\n        <Boxes />\n        <OrbitControls  enablePan={false} />\n      </Canvas>\n    </>\n  )\n}\n\nexport default Example","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n"],"names":["length","o","THREE","c","colors","Array","from","niceColors","Math","floor","random","Boxes","ref","useRef","useState","Float32Array","_","i","set","convertSRGBToLinear","toArray","flat","colorArray","useLayoutEffect","x","y","z","id","position","updateMatrix","current","setMatrixAt","matrix","instanceMatrix","needUpdate","args","undefined","attach","vertexColors","toneMapped","children","camera","intensity","enablePan","OrbitControls","React","makeDefault","regress","domElement","enableDamping","onChange","onStart","onEnd","restProps","invalidate","useThree","state","defaultCamera","gl","events","get","performance","explCamera","explDomElement","connected","controls","OrbitControls$1","useFrame","enabled","update","connect","dispose","callback","e","addEventListener","removeEventListener","old","_extends","object"],"sourceRoot":""}